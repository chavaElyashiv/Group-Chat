[{"C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\index.js":"1","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\serviceWorker.js":"2","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\App\\index.js":"3","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\redux\\Stores\\store.js":"4","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\Messenger\\index.js":"5","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\ContactList\\index.js":"6","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\redux\\MiddleWares\\conversation.js":"7","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\redux\\MiddleWares\\contact.js":"8","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\redux\\Actions\\actions.js":"9","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\ConversationSearch\\index.js":"10","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\ConversationListItem\\index.js":"11","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\MessageList\\index.js":"12","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\ConversationList\\index.js":"13","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\MembersList\\index.js":"14","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\NewHangout\\index.js":"15","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\ToolbarButton\\index.js":"16","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\Toolbar\\index.js":"17","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\Compose\\index.js":"18","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\Message\\index.js":"19","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\UploadImage\\index.js":"20"},{"size":826,"mtime":1611752719443,"results":"21","hashOfConfig":"22"},{"size":5083,"mtime":1608022793617,"results":"23","hashOfConfig":"22"},{"size":3350,"mtime":1611752719411,"results":"24","hashOfConfig":"22"},{"size":5599,"mtime":1611752719450,"results":"25","hashOfConfig":"22"},{"size":1146,"mtime":1611145918525,"results":"26","hashOfConfig":"22"},{"size":2547,"mtime":1611752719416,"results":"27","hashOfConfig":"22"},{"size":8914,"mtime":1611753184077,"results":"28","hashOfConfig":"22"},{"size":6034,"mtime":1611752719449,"results":"29","hashOfConfig":"22"},{"size":743,"mtime":1607860466170,"results":"30","hashOfConfig":"22"},{"size":2395,"mtime":1609164220038,"results":"31","hashOfConfig":"22"},{"size":3668,"mtime":1611752719426,"results":"32","hashOfConfig":"22"},{"size":7307,"mtime":1611752719430,"results":"33","hashOfConfig":"22"},{"size":2616,"mtime":1611752719416,"results":"34","hashOfConfig":"22"},{"size":1905,"mtime":1611752719426,"results":"35","hashOfConfig":"22"},{"size":6100,"mtime":1611752719440,"results":"36","hashOfConfig":"22"},{"size":251,"mtime":1608199786533,"results":"37","hashOfConfig":"22"},{"size":390,"mtime":1606999432516,"results":"38","hashOfConfig":"22"},{"size":3098,"mtime":1611752719415,"results":"39","hashOfConfig":"22"},{"size":2749,"mtime":1611752719430,"results":"40","hashOfConfig":"22"},{"size":833,"mtime":1611752719443,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1sokasz",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"44"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"44"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"44"},"C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\index.js",[],["97","98"],"C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\serviceWorker.js",[],"C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\App\\index.js",["99","100","101","102"],"import { Provider } from 'react-redux';\r\nimport { Socket } from 'socket.io-client';\r\nimport store from '../../redux/Stores/store';\r\nimport ContactList from '../ContactList';\r\nimport Messenger from '../Messenger';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport io from \"socket.io-client\";\r\nconst ENDPOINT2 = \"http://127.0.0.1:4001\"\r\nconst ENDPOINT = \"http://chat.leader.codes:4000\";\r\n\r\nexport default function App() {\r\n  const [response, setResponse] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    debugger;\r\n    const socket = socketIOClient(ENDPOINT);\r\n    // const socket = socketIOClient(ENDPOINT, {transports: ['websocket']});\r\n\r\n    socket.on(\"FromAPI\", data => {\r\n      setResponse(data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <p>\r\n        It's <time dateTime={response}>{response}</time>\r\n      </p>\r\n      <div className=\"App\" >\r\n        <Messenger />\r\n      </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\n///////sockettttttttt\r\n// import React, { useState, useEffect } from \"react\";\r\n// import socketIOClient from \"socket.io-client\";\r\n// import { subscribeToTimer } from '../../socket';\r\n\r\n// // const ENDPOINT='https://localhost/4000'\r\n//  function App() {\r\n//   const [response, setResponse] = useState(\"\");\r\n// const ENDPOINT = 'https://socket.chat.leader.codes/';\r\n// debugger;\r\n// const socket = socketIOClient(\"https://socket.chat.leader.codes\",{reconnection:false})\r\n\r\n// //var socket = socketIOClient(ENDPOINT,{transports: ['websocket']});\r\n\r\n//   useEffect(() => {\r\n//   // socket = socketIOClient(ENDPOINT,{transports: ['websocket']});\r\n\r\n//     debugger;\r\n// // const socket = socketIOClient(\"https://socket.dev.leader.codes\", { transports: ['websocket']});\r\n//       // const socket = new WebSocket('ws://localhost:4000');\r\n\r\n//       // Connection opened\r\n//       // socket.addEventListener('open', function (event) {\r\n//       //   debugger\r\n//       //     socket.send('Hello Server!');\r\n//       // });\r\n\r\n//       // // Listen for messages\r\n//       // socket.addEventListener('FromAPI1', function (event) {\r\n//       //   debugger\r\n//       //     console.log('Message from server ', event.data);\r\n//       // });\r\n//     //const socket = socketIOClient(ENDPOINT);\r\n// //     debugger\r\n// //     x();\r\n// //     async function x(){  await  socket.on(\"connect\", data => {\r\n// //      console.log(\"data\",data);\r\n// // setResponse(data);\r\n// //    });\r\n// //   }\r\n// socket.current.on(\"message\", message => {\r\n//   console.log(message);\r\n//    // setMessages([...messages, message])\r\n// })\r\n//    socket.current.on(\"con\", data => {\r\n//      debugger\r\n//     console.log(\"data\",data);\r\n// setResponse(data);\r\n//   });\r\n//   }, []);\r\n\r\n//   function emitMessage(message) {\r\n//     debugger\r\n//     socket.current.emit('send_message', message);\r\n\r\n//   //  $(\"#div_chat\").scrollTop(10000);\r\n// //$('#txt').val('');\r\n\r\n// }\r\n// emitMessage(\"hi\")\r\n\r\n// //   debugger\r\n// //   socket.on(\"connect\", data => {\r\n// //     console.log(\"data\",data);\r\n// // setResponse(data);\r\n// //   });\r\n// //   socket.on(\"connection\", data => {\r\n// //     console.log(\"data\",data);\r\n// // setResponse(data);\r\n// //   });\r\n\r\n\r\n//   return (\r\n//     <p>\r\n//       It's <time dateTime={response}>{response}</time>\r\n//     </p>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n\r\n","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\redux\\Stores\\store.js",["103","104","105","106","107","108","109","110","111","112"],"\r\n\r\n\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport produce from 'immer';\r\nimport { getUsernameReturnEmail, returnUsersId, newHangout, getHangoutById, setJwt, getHangoutsForUser, getUidByUserName, addNewWave, getIdByUserName, getManagerPermission, removeMemberByManager } from '../MiddleWares/conversation'\r\nimport { getContactsForUser, getAllContactsExceptMembers, AddContactsToHangout, getAllHangoutMembers, setShow } from '../MiddleWares/contact'\r\n\r\n\r\nconst initalStaste = {\r\n     listConvesation: [],\r\n     hangouts: [],\r\n     hangoutsContacts: [],\r\n     contacts: [],\r\n     userName: (window.location.pathname.split('/')[1]),\r\n     hangout: (window.location.pathname.split('/')[3]),\r\n     uid: '',\r\n     _id: '',\r\n     jwt: '',\r\n     showContactList: false,\r\n     showMembersList: false,\r\n     showNewHangout: false,\r\n     showMessagesList: false,\r\n     filteredContacts: [],\r\n     filteredMessages: [],\r\n     filteredMembers: [],\r\n     filteredAddContacts: [],\r\n     members: [],\r\n     messageInput: '',\r\n     manager: false,\r\n     managersList: [],\r\n     owner: false,\r\n     pictures: []\r\n}\r\n\r\n\r\n\r\n\r\nconst reducer = produce((state, action) => {\r\n\r\n     switch (action.type) {\r\n          case \"SET_CONVERSATION\":\r\n               console.log(\"store\", action.payload);\r\n               state.listConvesation = action.payload;\r\n               break;\r\n          case \"SET_HANGOUTS\":\r\n               state.hangouts = action.payload;\r\n               break;\r\n\r\n          case \"SET_FILTERED_LIST\":\r\n\r\n               if (action.payload.kindList == \"filteredContacts\")\r\n                    state.filteredContacts = action.payload.list;\r\n               else if (action.payload.kindList == \"filteredHangouts\")\r\n                    state.filteredHangouts = action.payload.list;\r\n               else if (action.payload.kindList == \"filteredMessages\")\r\n                    state.filteredMessages = action.payload.list;\r\n               else if (action.payload.kindList == \"filteredMembers\")\r\n                    state.filteredMembers = action.payload.list;\r\n               else if (action.payload.kindList == \"filteredAddContacts\")\r\n                    state.filteredAddContacts = action.payload.list;\r\n\r\n               break;\r\n          case \"SET_FILTERED_HANGOUTS\":\r\n               console.log(\"!!!!!!!\", action.payload);\r\n               state.filteredHangouts = action.payload;\r\n               break;\r\n          case \"ADD_WAVE\":\r\n               debugger\r\n               state.listConvesation.push(action.payload);\r\n               break;\r\n          case \"ADD_NEW_HANGOUT\":\r\n               state.hangouts.push(action.payload);\r\n               break;\r\n          case \"SET_HANGOUTS_CONTACTS\":\r\n               state.hangoutsContacts = action.payload;\r\n               break;\r\n          case \"SET_CONTACTS\":\r\n               state.contacts = action.payload;\r\n               break;\r\n          case \"ADD_MEMBER\":\r\n               state.members.push(action.payload);\r\n               break;\r\n\r\n          case \"SET_UID\":\r\n               ;\r\n               console.log(\"uid\", action.payload);\r\n               state.uid = action.payload\r\n               break;\r\n\r\n          case \"SET_SHOW_NEW_HANGOUT\":\r\n               if (action.payload != undefined)\r\n                    state.showNewHangout = action.payload;\r\n               else\r\n                    state.showNewHangout = !state.showNewHangout;\r\n               break;\r\n          case \"SET_SHOW_CONTACT_LIST\":\r\n               if (action.payload != undefined)\r\n                    state.showContactList = action.payload;\r\n               else\r\n                    state.showContactList = !state.showContactList;\r\n               break;\r\n\r\n          case \"SET_SHOW_MESSAGES_LIST\":\r\n               if (action.payload != undefined)\r\n                    state.showMessagesList = action.payload;\r\n               else\r\n                    state.showMessagesList = !state.showMessagesList;\r\n               break;\r\n          case \"SET_SHOW_MEMBERS_LIST\":\r\n               if (action.payload != undefined)\r\n                    state.showMembersList = action.payload;\r\n               else\r\n                    state.showMembersList = !state.showMembersList;\r\n               break;\r\n          case \"SET_CURRENT_HANGOUT\":\r\n\r\n               state.hangout = action.payload;\r\n               break;\r\n          case \"SET_MEMBERS\":\r\n\r\n               state.members = action.payload;\r\n               break;\r\n          case \"SET_MESSAGE_INPUT\":\r\n\r\n               state.messageInput = action.payload;\r\n               break;\r\n          case \"SET_MANAGER\":\r\n               state.manager = action.payload;\r\n               break;\r\n          case \"SET_OWNER\":\r\n               state.owner = action.payload;\r\n               break;\r\n          case \"SET_ID\":\r\n               state._id = action.payload;\r\n               break;\r\n          case \"SET_MANAGERS_LIST\":\r\n               state.managersList = action.payload;\r\n               break;\r\n\r\n     }\r\n\r\n}, initalStaste)\r\nconst store = createStore(reducer, applyMiddleware(setJwt, getUsernameReturnEmail, returnUsersId, getUidByUserName, newHangout, getHangoutById, getHangoutsForUser, getAllContactsExceptMembers, getContactsForUser, AddContactsToHangout, getAllHangoutMembers, addNewWave, setShow, getIdByUserName, getManagerPermission, removeMemberByManager))\r\nwindow.store = store\r\n\r\nexport default store;\r\n\r\nstore.dispatch({ type: 'SET_JWT' })\r\nstore.dispatch({ type: 'GET_UID_BY_USER_NAME' })\r\n\r\n\r\n// store.dispatch({ type: 'GET_HANGOUTS_FOR_USER' })\r\n\r\n// store.dispatch({ type: 'GET_CONTACTS_FOR_USER' })\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\Messenger\\index.js",["113"],"import React from 'react';\r\nimport ContactList from '../ContactList';\r\nimport ConversationList from '../ConversationList';\r\nimport MessageList from '../MessageList';\r\nimport './Messenger.css';\r\n\r\nexport default function Messenger(props) {\r\n  return (\r\n    <div className=\"messenger\">\r\n      {/* <Toolbar\r\n          title=\"Messenger\"\r\n          leftItems={[\r\n            <ToolbarButton key=\"cog\" icon=\"ion-ios-cog\" />\r\n          ]}\r\n          rightItems={[\r\n            <ToolbarButton key=\"add\" icon=\"ion-ios-add-circle-outline\" />\r\n          ]}\r\n        /> */}\r\n\r\n      {/* <Toolbar\r\n          title=\"Conversation Title\"\r\n          rightItems={[\r\n            <ToolbarButton key=\"info\" icon=\"ion-ios-information-circle-outline\" />,\r\n            <ToolbarButton key=\"video\" icon=\"ion-ios-videocam\" />,\r\n            <ToolbarButton key=\"phone\" icon=\"ion-ios-call\" />\r\n          ]}\r\n        /> */}\r\n\r\n      <div className=\"scrollable sidebar\">\r\n        <ConversationList />\r\n\r\n      </div>\r\n\r\n      <div className=\"scrollable content\">\r\n\r\n        <MessageList />\r\n      </div>\r\n      {/* <div maxwidth=\"mm\"><ContactList/></div> */}\r\n    </div>\r\n  );\r\n}","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\ContactList\\index.js",["114","115","116","117","118","119"],"import React, { useState, useEffect } from 'react';\r\nimport ConversationListItem from '../ConversationListItem';\r\nimport { actions } from '../../redux/Actions/actions'\r\nimport { connect } from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport ConversationSearch from '../ConversationSearch/index'\r\n\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        contacts: state.hangoutsContacts,\r\n        members: state.members,\r\n        filteredAddContacts: state.filteredAddContacts\r\n    }\r\n\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n}));\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n    AddContactsToHangout: (AddContacts) =>\r\n        dispatch(actions.addContactsToHangout(AddContacts)),\r\n    setShowContactList: () => dispatch(actions.setShow(\"members\"))\r\n\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(function ContactList(props) {\r\n    const { filteredAddContacts, contacts, AddContactsToHangout, members, setShowContactList } = props;\r\n    const classes = useStyles();\r\n    var [AddContacts, setAddContacts] = useState([]);\r\n    var [con, setCon] = useState([]);\r\n\r\n    const addContactsToList = function (contact) {\r\n\r\n        if (AddContacts.includes(contact)) {\r\n            setAddContacts(AddContacts = AddContacts.filter(x => x !== contact));\r\n        }\r\n\r\n        else\r\n            setAddContacts(AddContacts = AddContacts.concat(contact));\r\n\r\n\r\n        console.log(\"AddContacts\", AddContacts)\r\n\r\n    }\r\n\r\n    console.log(\"contact-contactList\", contacts);\r\n    return (\r\n        <div className=\"conversation-list\" >\r\n            <ConversationSearch list={contacts} kindList=\"filteredAddContacts\" />\r\n\r\n            {AddContacts ? AddContacts.map((item, index) => (\r\n                console.log(\"item\", item.email),\r\n                <> {item.email} , </>\r\n            )) : 'null'}\r\n\r\n            {\r\n                filteredAddContacts.map(contact =>\r\n                    <ConversationListItem key={contact._id}\r\n                        data={contact}\r\n                        onClick={() => addContactsToList(contact)\r\n                        }\r\n                        AddContacts={AddContacts}\r\n                    />\r\n                )\r\n            }\r\n\r\n            <div className={classes.root}><Button variant=\"contained\" color=\"primary\" onClick={() => { setShowContactList() }}>ADD CONTACTS</Button></div>\r\n        </div>\r\n\r\n    );\r\n})","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\redux\\MiddleWares\\conversation.js",["120"],"C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\redux\\MiddleWares\\contact.js",["121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138"],"import { actions } from '../Actions/actions'\r\n\r\n\r\nexport const setShow = ({ dispatch, getState }) => next => action => {\r\n    if (action.type === 'SET_SHOW') {\r\n\r\n        if (action.payload == 'messages') {\r\n            dispatch(actions.setShowMessagesList(true));\r\n            if (getState().showContactList == true)\r\n                dispatch(actions.setShowContactList());\r\n            if (getState().showNewHangout == true)\r\n                dispatch(actions.setShowNewHangout());\r\n            if (getState().showMembersList == true)\r\n                dispatch(actions.setShowMembersList());\r\n        }\r\n        else if (action.payload == 'members') {\r\n            if (getState().showMembersList == true) {\r\n                dispatch(actions.setShowMessagesList());\r\n            }\r\n            else if (getState().showMessagesList == true)\r\n                dispatch(actions.setShowMessagesList());\r\n\r\n            dispatch(actions.setShowMembersList());\r\n\r\n            if (getState().showContactList == true)\r\n                dispatch(actions.setShowContactList());\r\n            if (getState().showNewHangout == true)\r\n                dispatch(actions.setShowNewHangout());\r\n            // if (getState().showNewHangout == false &&getState().showContactList == false &&getState().showMessagesList == false)\r\n            // dispatch(actions.setShowMessagesList());\r\n        }\r\n        else if (action.payload == 'contacts') {\r\n            dispatch(actions.setShowContactList());\r\n            if (getState().showMessagesList == true)\r\n                dispatch(actions.setShowMessagesList());\r\n            if (getState().showMembersList == true)\r\n                dispatch(actions.setShowMembersList());\r\n            if (getState().showNewHangout == true)\r\n                dispatch(actions.setShowNewHangout());\r\n        }\r\n        else if (action.payload == 'newHangout') {\r\n            if (getState().showNewHangout == true) {\r\n                dispatch(actions.setShowMessagesList());\r\n            }\r\n            else if (getState().showMessagesList == true)\r\n                dispatch(actions.setShowMessagesList());\r\n            dispatch(actions.setShowNewHangout());\r\n\r\n            if (getState().showContactList == true)\r\n                dispatch(actions.setShowContactList());\r\n            if (getState().showMembersList == true)\r\n                dispatch(actions.setShowMembersList());\r\n        }\r\n    }\r\n    return next(action);\r\n\r\n}\r\n//getAllContactsExceptMembers\r\nexport const getAllContactsExceptMembers = ({ dispatch, getState }) => next => action => {\r\n    if (action.type === 'GET_ALL_CONTACTS_EXCEPT_MEMBERS') {\r\n        return fetch(`https://chat.leader.codes/api/${getState().userName}/${getState().hangout}/getAllContactsExceptMembers`, {\r\n            method: 'POST',\r\n            headers: {\r\n                Authentication: getState().jwt,\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then((res) => {\r\n            return res.json()\r\n\r\n\r\n        })\r\n            .then((res) => {\r\n                console.log(\"contacts\", res)\r\n                dispatch(actions.setHangoutsContacts(res.contacts));\r\n                dispatch(actions.setFilteredList({ list: res.contacts, kindList: \"filteredAddContacts\" }));\r\n\r\n            })\r\n    }\r\n    return next(action);\r\n}\r\nexport const getContactsForUser = ({ dispatch, getState }) => next => action => {\r\n    if (action.type === 'GET_CONTACTS_FOR_USER') {\r\n        return fetch(`https://chat.leader.codes/api/${getState().userName}/getAllContacts`, {\r\n            method: 'POST',\r\n            headers: {\r\n                Authentication: getState().jwt,\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then((res) => {\r\n            return res.json()\r\n\r\n\r\n        })\r\n            .then((res) => {\r\n                console.log(\"contacts\", res)\r\n                dispatch(actions.setContacts(res.contacts));\r\n                dispatch(actions.setFilteredList({ list: res.contacts, kindList: \"filteredContacts\" }));\r\n                // SET_FILTERED_LIST\r\n\r\n\r\n\r\n            })\r\n    }\r\n    return next(action);\r\n}\r\n\r\nexport const AddContactsToHangout = ({ dispatch, getState }) => next => action => {\r\n    if (action.type === 'ADD_CONTACTS_TO_HANGOUT') {\r\n        action.payload.forEach(element => {\r\n            return fetch(`https://chat.leader.codes/api/${getState().userName}/${getState().hangout}/addNewMember`, {\r\n                method: 'POST',\r\n                body: JSON.stringify({ contactID: element._id }),\r\n                headers: {\r\n                    Authentication: getState().jwt,\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }).then((res) => {\r\n                return res.json()\r\n\r\n\r\n            })\r\n                .then((res) => {\r\n                    console.log(\"contacts\", res)\r\n                    if (res.contact)\r\n                        dispatch(actions.addMember(res.contact));\r\n\r\n\r\n                })\r\n\r\n        });\r\n    }\r\n    return next(action);\r\n}\r\n\r\nexport const getAllHangoutMembers = ({ dispatch, getState }) => next => action => {\r\n    if (action.type === 'GET_ALL_HANGOUT_MEMBERS') {\r\n\r\n        return fetch(`https://chat.leader.codes/api/${getState().userName}/${getState().hangout}/getAllHangoutMembers`, {\r\n            method: 'POST',\r\n            headers: {\r\n                Authentication: getState().jwt,\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then((res) => {\r\n            return res.json()\r\n\r\n\r\n        })\r\n            .then((res) => {\r\n                console.log(\"contacts\", res)\r\n                dispatch(actions.setMembers(res.memberList));\r\n                dispatch(actions.setFilteredList({ list: res.memberList, kindList: \"filteredMembers\" }));\r\n\r\n\r\n\r\n\r\n            })\r\n\r\n\r\n    }\r\n    return next(action);\r\n}","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\redux\\Actions\\actions.js",[],"C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\ConversationSearch\\index.js",["139","140","141","142","143","144"],"import React from 'react';\r\nimport './ConversationSearch.css';\r\nimport { connect } from 'react-redux'\r\nimport {actions} from '../../redux/Actions/actions'\r\nfunction mapStateToProps(state) {\r\n  return {\r\n     // hangouts: state.hangouts,\r\n     // filteredList: state.filteredList\r\n  }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setSearchReasult: (list,kindList) => dispatch(actions.setFilteredList({list,kindList}))\r\n  \r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(function ConversationSearch(props) {\r\n  const conversations=props.list;\r\n  const {setSearchReasult,kindList} = props\r\n  let filteredList=props.list;\r\n  console.log(\"l;l;\",props.list);\r\n  \r\n  filteredList=conversations;\r\n  setSearchReasult(filteredList,kindList);\r\n  function search (eve) {\r\n  \r\n    if (eve != \"\") {\r\n        console.log(eve);\r\n        searchConversations(eve)\r\n    } else {\r\n      console.log(\"press somthing \");\r\n      \r\n      filteredList=conversations \r\n     // if(kindList==\"filteredHangouts\")\r\n      setSearchReasult(filteredList,kindList)\r\n    }\r\n}\r\n\r\nfunction searchConversations(searchText) {\r\n \r\n  filteredList=[];\r\n  \r\n  //if(kindList==\"filteredHangouts\")\r\n  setSearchReasult(filteredList,kindList)\r\n  \r\n    // filteredList = []\r\n    conversations.forEach(item => {\r\n   //   \"kindList==\"filteredHangouts\" && \"\r\n    \r\n        //if the subject contains the searchTxt\r\n        if (kindList==\"filteredMessages\" && item.body != undefined && item.body.toLowerCase().indexOf(searchText) > -1) {\r\n           filteredList.push(item);\r\n           setSearchReasult(filteredList,kindList)\r\n        }\r\n        if (kindList==\"filteredMembers\" && item.email != undefined && item.email.toLowerCase().indexOf(searchText) > -1) {\r\n            filteredList.push(item);\r\n            setSearchReasult(filteredList,kindList)\r\n         }\r\n      else  if (item.name != undefined && item.name.toLowerCase().indexOf(searchText) > -1) {\r\n          console.log(item.name);\r\n          filteredList.push(item);\r\n          setSearchReasult(filteredList,kindList)\r\n       }\r\n        \r\n    });\r\n\r\n    console.log(filteredList);\r\n}\r\n   \r\n    return (\r\n      <div className=\"conversation-search\">\r\n        <input\r\n          type=\"search\" onChange={(e)=>{search(e.target.value)}}\r\n          className=\"conversation-search-input\"\r\n          placeholder=\"Search Messages\"\r\n        />\r\n      </div>\r\n    );\r\n})","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\ConversationListItem\\index.js",["145","146","147","148","149","150","151","152"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Overlay } from 'react-bootstrap';\r\nimport { Icon, InlineIcon } from '@iconify/react';\r\nimport accountMultiplePlus from '@iconify-icons/mdi/account-multiple-plus';\r\nimport './ConversationListItem.css';\r\nimport { connect } from 'react-redux'\r\nimport { actions } from '../../redux/Actions/actions'\r\nimport { blueGrey, red } from '@material-ui/core/colors';\r\nimport Button1 from '@material-ui/core/Button';\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    stateConversation: state.listConvesation,\r\n    owner: state.owner,\r\n    manager: state.manager,\r\n    showMembers: state.showMembersList\r\n\r\n  }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n  GivePermission: (_id) =>\r\n    dispatch(actions.getManagerPermission(_id)),\r\n  removeMember: (_id) => dispatch(actions.removeMemberByManager(_id), dispatch(actions.getManagerPermission(_id)))\r\n})\r\n\r\n//   setCurrentConversation:(_id)=>\r\n//   dispatch(actions.getHangoutById(_id),  dispatch(actions.setShowContactList(false))), \r\n\r\n// })\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(function ConversationListItem(props) {\r\n  const [show, setShow] = useState(false);\r\n  const target = useRef(null);\r\n  const { stateConversation, setCurrentConversation, AddContacts, GivePermission, removeMember, showMembers, owner, manager, showButton, isManager } = props;\r\n\r\n  const getConversations = props.onClick;\r\n\r\n  function contactList(_id) {\r\n    getConversations(_id);\r\n  }\r\n  console.log(\"getConversations\", getConversations);\r\n\r\n  const { _id, profileGroup, name, text, email, thumbnail } = props.data;\r\n  return (\r\n    <div className=\"conversation-list-item\" onClick={(e) => getConversations ? contactList(_id) : console.log(getConversations)} >\r\n\r\n      {profileGroup && <img className=\"conversation-photo\" src={require(\"../../images/\" + profileGroup)} alt=\"conversation\" />}\r\n      {thumbnail && <img className=\"conversation-photo\" src={require(\"../../images/\" + thumbnail)} alt=\"conversation\" />}\r\n\r\n      <div className=\"conversation-info\">\r\n        <h1 className=\"conversation-title\">{name}</h1>\r\n        <p className=\"conversation-snippet\">{text}</p>\r\n        <p className=\"conversation-snippet\">{email}</p>\r\n\r\n\r\n      </div>\r\n      {owner && showButton && <Button1 variant=\"contained\" color=\"primary\" onClick={(e) => GivePermission(_id)}> {isManager ? \"remove permission\" : \"Manager permission\"}</Button1>}\r\n      {owner && showButton && <Button1 variant=\"contained\" color=\"primary\" onClick={(e) => removeMember(_id)}>remove member</Button1>}\r\n\r\n      <>\r\n        <Button variant=\"danger\" ref={target} style={{\r\n          border: 'none',\r\n          background: 'none'\r\n        }} onClick={() => setShow(!show)}>\r\n\r\n          <i className=\"la la-ellipsis-v\" />\r\n          <div>\r\n            <i variant=\"danger\" ref={target} onClick={() => setShow(!show)} className=\"fa fa-ellipsis-v\" />\r\n          </div>\r\n        </Button>\r\n\r\n        <Overlay target={target.current} show={show} placement=\"right\">\r\n          {({ placement, arrowProps, show: _show, popper, ...props }) => (\r\n            <div\r\n              {...props}\r\n              style={{\r\n                backgroundColor: '#ffff',\r\n                padding: '2px 10px',\r\n                color: 'black',\r\n                borderRadius: 3,\r\n                ...props.style,\r\n              }}\r\n            >\r\n              <option className=\"option\" value=\"\">exit</option>\r\n              <option className=\"option\" value=\"\">archive</option>\r\n\r\n            </div>\r\n          )}\r\n        </Overlay>\r\n      </>\r\n    </div>\r\n  );\r\n\r\n})","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\MessageList\\index.js",["153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168"],"import React, { useEffect, useState } from 'react';\r\nimport Compose from '../Compose';\r\nimport Toolbar from '../Toolbar';\r\n\r\nimport $ from 'jquery';\r\nimport ToolbarButton from '../ToolbarButton';\r\nimport Message from '../Message';\r\nimport moment from 'moment';\r\nimport { connect } from 'react-redux';\r\nimport './MessageList.css';\r\nimport { actions } from '../../redux/Actions/actions'\r\nimport ContactList from '../ContactList/index'\r\nimport ConversationSearch from '../ConversationSearch/index'\r\nimport io from \"socket.io-client\";\r\nimport MembersList from '../MembersList/index';\r\nimport NewHangout from '../NewHangout/index';\r\nimport { Icon, InlineIcon } from '@iconify/react';\r\nimport accountMultiplePlus from '@iconify-icons/mdi/account-multiple-plus';\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    userName: state.userName,\r\n    stateConversation: state.listConvesation,\r\n    showContactList: state.showContactList,\r\n    showMembersList: state.showMembersList,\r\n    messageInput: state.messageInput,\r\n    showNewHangout: state.showNewHangout,\r\n    showMessagesList: state.showMessagesList,\r\n    filteredMessages: state.filteredMessages,\r\n    listConvesation: state.listConvesation\r\n    //  filteredContacts:state.filteredContacts\r\n  }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setCurrentConversation: (conversation) => dispatch(actions.setConversation(conversation)),\r\n\r\n  SetMessageInput: (messageInput) =>\r\n    dispatch(actions.setMessageInput(messageInput)),\r\n  showMembers: () => dispatch(actions.setShow(\"members\")),\r\n  addNewWave: (wave) => dispatch(actions.addNewWave(wave))\r\n\r\n\r\n\r\n})\r\nconst MY_USER_ID = 'apple';\r\nexport default connect(mapStateToProps, mapDispatchToProps)(function MessageList(props) {\r\n\r\n  const ENDPOINT = 'https://socket.chat.leader.codes';\r\n  const messages = props.filteredMessages;\r\n\r\n\r\n  const { showMessagesList, showNewHangout, stateConversation, setCurrentConversation, showContactList, showContact, showMembersList, showMembers } = props;\r\n\r\n  let socket;\r\n  // let list;\r\n  // let kindList;\r\n  const [messages2, setMessages] = useState([])\r\n  const [showMyComponent, setShowMyComponent] = useState(false)\r\n\r\n  const [name, setName] = useState('');\r\n  const [room, setRoom] = useState('');\r\n  const [users, setUsers] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  // $('.emojiButton').click(function(){\r\n  //   debugger;\r\n  //   console.log(\"emoji\");\r\n  // })\r\n  useEffect(() => {\r\n\r\n    //     const name = \"mindy\"\r\n    //     const room = 210\r\n    //     socket = io(ENDPOINT, { transports: ['websocket'] });\r\n    //     socket.emit('user', name, room);\r\n    //     socket.on('chat_message', message => {\r\n    //       $(\".compose-input\").val(\"helllo\")\r\n    //       console.log(\"emitt\");\r\n    //       setMessages(msgs => [...msgs, message]);\r\n    //     });\r\n\r\n    //     socket.on(\"roomData\", ({ users }) => {\r\n    //       setUsers(users);\r\n    //     });\r\n    //   }, []);\r\n    // =======\r\n\r\n  }, [props.listConvesation])\r\n  // useEffect(() => {\r\n  //   const name = \"mindy\"\r\n  //   const room = 210\r\n  //   socket = io(ENDPOINT,{transports:['websocket']});\r\n  //   socket.emit('user', name, room);\r\n  //   socket.on('chat_message', message => {\r\n  //     $(\".compose-input\").val(\"helllo\")\r\n  //     console.log(\"emitt\");\r\n  //     setMessages(msgs => [...msgs, message]);\r\n  //   });\r\n\r\n  //   socket.on(\"roomData\", ({ users }) => {\r\n  //   setUsers(users);\r\n  //   });\r\n  // }, []);\r\n\r\n  const sendMessage = (event) => {\r\n    const wave = {\r\n      body: props.messageInput,\r\n      from: props.userName\r\n    }\r\n    event.preventDefault();\r\n    console.log(socket);\r\n    console.log(\"message to send\" + props.messageInput);\r\n    if (props.messageInput) {\r\n      debugger\r\n      props.addNewWave(wave)\r\n      props.SetMessageInput(\"\")\r\n      // socket.emit('chat_message', props.messageInput);\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  const renderMessages = () => {\r\n    console.log(\"messages\", messages);\r\n    let i = 0;\r\n    let messageCount = messages.length;\r\n    let tempMessages = [];\r\n\r\n    while (i < messageCount) {\r\n      if (messages[i].body) {\r\n        let previous = messages[i - 1];\r\n        let current = messages[i];\r\n        let next = messages[i + 1];\r\n\r\n        let currentMoment = moment(current.timestamp);\r\n        let prevBySameAuthor = false;\r\n        let nextBySameAuthor = false;\r\n        let startsSequence = true;\r\n        let endsSequence = true;\r\n        let showTimestamp = true;\r\n\r\n        if (previous) {\r\n          let previousMoment = moment(previous.timestamp);\r\n          let previousDuration = moment.duration(currentMoment.diff(previousMoment));\r\n\r\n\r\n          if (previousDuration.as('hours') < 1) {\r\n            startsSequence = false;\r\n          }\r\n\r\n          if (previousDuration.as('hours') < 1) {\r\n            showTimestamp = false;\r\n          }\r\n        }\r\n\r\n        if (next) {\r\n          let nextMoment = moment(next.timestamp);\r\n          let nextDuration = moment.duration(nextMoment.diff(currentMoment));\r\n          nextBySameAuthor = next.author === current.author;\r\n\r\n          if (nextBySameAuthor && nextDuration.as('hours') < 1) {\r\n            endsSequence = false;\r\n          }\r\n        }\r\n        tempMessages.push(\r\n\r\n          <Message\r\n            // messages={messages}\r\n            //  name={name} \r\n            key={i}\r\n\r\n            startsSequence={startsSequence}\r\n            endsSequence={endsSequence}\r\n            showTimestamp={showTimestamp}\r\n            data={current}\r\n          />\r\n        );\r\n      }\r\n\r\n      i += 1;\r\n\r\n    }\r\n\r\n    return tempMessages;\r\n  }\r\n\r\n  function h() {\r\n    showMembers()\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"message-list\">\r\n      {showMessagesList || showMembersList || showContactList ? <Toolbar\r\n        title={showMessagesList ? \"Conversation Title\" : \"\"}\r\n        rightItems={[\r\n          // {/* <ToolbarButton key=\"123e\" icon=\"ion-ios-person-add-sharp\" /> */}\r\n\r\n          // {/* <span class=\"iconify\" data-icon=\"ion:person-add-sharp\" data-inline=\"false\"></span> */}\r\n\r\n          <>  <Icon key=\"pop\" className=\"tool\" icon={accountMultiplePlus} onClick={h} />\r\n\r\n            <ToolbarButton key=\"video\" icon=\"ion-ios-videocam\" />\r\n            <ToolbarButton key=\"phone\" icon=\"ion-ios-call\" />\r\n          </>\r\n\r\n\r\n        ]}\r\n      /> : ''}\r\n\r\n\r\n      <div className=\"message-list-container\">\r\n        {showMessagesList ? <ConversationSearch list={stateConversation} kindList=\"filteredMessages\" /> : ''}\r\n        {showMessagesList ? renderMessages() : ''}\r\n        {showMembersList ? <MembersList /> : ''}\r\n        {showContactList ? <ContactList /> : ''}\r\n        {showNewHangout ? <NewHangout /> : ''}\r\n      </div>\r\n\r\n      {showMessagesList ? <Compose rightItems={[\r\n        <button className=\"sendButton\" onClick={(e) => sendMessage(e)}><div><i className=\"fa fa-paper-plane\" /></div></button>,\r\n        <ToolbarButton key=\"photo\" icon=\"ion-ios-camera\" />,\r\n        <ToolbarButton key=\"image\" icon=\"ion-ios-image\" />,\r\n        <ToolbarButton key=\"audio\" icon=\"ion-ios-mic\" />,\r\n        <ToolbarButton key=\"money\" icon=\"ion-ios-card\" />,\r\n        <ToolbarButton key=\"games\" icon=\"ion-logo-game-controller-b\" />,\r\n        // <ToolbarButton key=\"emoji\" icon=\"ion-ios-happy\" />\r\n      ]} /> : ''}\r\n    </div>\r\n  );\r\n})\r\n","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\ConversationList\\index.js",["169","170","171","172","173","174","175"],"import React, { useState, useEffect } from 'react';\r\nimport ConversationSearch from '../ConversationSearch';\r\nimport ConversationListItem from '../ConversationListItem';\r\nimport Toolbar from '../Toolbar';\r\nimport ToolbarButton from '../ToolbarButton';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux'\r\nimport { actions } from '../../redux/Actions/actions'\r\n\r\nimport './ConversationList.css';\r\nimport ContactList from '../ContactList';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        hangouts: state.hangouts,\r\n        filteredHangouts: state.filteredHangouts\r\n\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setCurrentConversation: (_id) => dispatch(actions.getHangoutById(_id)\r\n        , dispatch(actions.setShow(\"messages\"))),\r\n\r\n\r\n    NewHanghout: () => dispatch(actions.setShow(\"newHangout\"))\r\n\r\n\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(function ConversationList(props) {\r\n    const { setCurrentConversation, NewHanghout, hangouts } = props;\r\n    const conversations = props.hangouts;\r\n    const filteredHangouts = props.filteredHangouts;\r\n\r\n    const getConversations = () => {\r\n        axios.get('https://randomuser.me/api/?results=20').then(response => {\r\n            let newConversations = response.data.results.map(result => {\r\n                return {\r\n                    photo: result.picture.large,\r\n                    name: `${result.name.first} ${result.name.last}`,\r\n                    text: 'Hello world! This is a long message that needs to be truncated.'\r\n                };\r\n            });\r\n        });\r\n    }\r\n\r\n    return (<div className=\"conversation-list\" >\r\n        <Toolbar title=\"Messenger\"\r\n            leftItems={\r\n                [<ToolbarButton key=\"cog\"\r\n                    icon=\"ion-ios-cog\" />\r\n                ]\r\n            }\r\n            rightItems={\r\n                [<ToolbarButton key=\"add\"\r\n                    icon=\"ion-ios-add-circle-outline\" onClick={NewHanghout} />\r\n                ]\r\n            }\r\n        /> <ConversationSearch list={hangouts} kindList=\"filteredHangouts\" />\r\n        {\r\n            filteredHangouts && filteredHangouts.length > 0 ?\r\n                filteredHangouts.map(conversation =>\r\n                    <div >\r\n\r\n                        <ConversationListItem key={conversation._id} className=\"color\"\r\n                            data={conversation} onClick={setCurrentConversation}\r\n                        /></div>\r\n                ) : <div className=\"no-result\">No results found</div>\r\n        }\r\n\r\n    </div>\r\n    );\r\n})","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\MembersList\\index.js",["176","177","178","179"],"import React, { useState, useEffect } from 'react';\r\nimport ConversationListItem from '../ConversationListItem';\r\nimport { actions } from '../../redux/Actions/actions'\r\nimport { connect } from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport ConversationSearch from '../ConversationSearch/index'\r\n\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        members: state.members,\r\n        showContactList: state.showContactList,\r\n        filteredMembers: state.filteredMembers,\r\n        manager: state.manager,\r\n        owner: state.owner,\r\n        managersList: state.managersList\r\n    }\r\n\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n}));\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n    setShowContactList: () => dispatch(actions.setShow(\"contacts\"))\r\n\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(function MembersList(props) {\r\n    const { members, setShowContactList, filteredMembers, owner, manager, managersList } = props;\r\n    const classes = useStyles();\r\n    return (\r\n        <div className=\"conversation-list\" >\r\n\r\n            <ConversationSearch list={members} kindList=\"filteredMembers\" />\r\n\r\n            {\r\n                filteredMembers.map(member =>\r\n\r\n                    <ConversationListItem key={member._id}\r\n                        data={member}\r\n                        showButton={true}\r\n                        isManager={managersList.includes(member._id)}\r\n\r\n                    />\r\n                )\r\n            }\r\n\r\n            <div className={classes.root}>\r\n\r\n                {(owner == true || manager == true) && <Button variant=\"contained\" color=\"primary\" onClick={() => { setShowContactList() }}>ADD CONTACT!</Button>}\r\n            </div>\r\n\r\n        </div>\r\n\r\n    );\r\n})","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\NewHangout\\index.js",["180","181","182","183","184","185"],"import React, { useState, useEffect } from 'react';\r\nimport UploadImage from '../UploadImage'\r\nimport ConversationListItem from '../ConversationListItem';\r\nimport { actions } from '../../redux/Actions/actions'\r\nimport { connect } from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport ConversationSearch from '../ConversationSearch/index'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport $ from 'jquery';\r\nimport './NewHangout.css';\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        contacts: state.contacts,\r\n        members: state.members,\r\n        filteredContacts: state.filteredContacts,\r\n        userName: state.userName,\r\n        uid: state.uid,\r\n        jwtFromCookie: state.jwt\r\n\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n}));\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//     root: {\r\n//         '& > *': {\r\n//             margin: theme.spacing(1),\r\n//         },\r\n//     },\r\n// }));\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    returnUsersId: (hangout) => dispatch(actions.returnUsersId(hangout)),\r\n    AddContactsToHangout: (AddContacts) => dispatch(actions.addContactsToHangout(AddContacts)),\r\n    setShow: () => dispatch(actions.setShow(\"newHangout\"))\r\n    //  setShowContactList: () => dispatch(actions.setShowContactList()),\r\n    // setFilteredContacts:()=> dispatch(actions.setShowContactList())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(function NewHangout(props) {\r\n\r\n    const { jwtFromCookie, uid, setShow, contacts, returnUsersId, AddContactsToHangout, members, setShowContactList, filteredContacts, userName } = props;\r\n    console.log(\"*****\", contacts);\r\n    const classes = useStyles();\r\n    var [AddContacts, setAddContacts] = useState([]);\r\n    var [groupName, setGroupName] = useState('');\r\n    var [img, setImg] = useState('');\r\n    // var [con, setCon] = useState([]);\r\n    // setShowContactList\r\n\r\n    const onChangeHandlerProfile = (event) => {\r\n\r\n        const reader = new FileReader();\r\n        const file = event;\r\n        reader.onloadend = () => {\r\n            setImg(reader.result);\r\n\r\n        };\r\n        reader.readAsDataURL(file);\r\n\r\n        console.log(\"event\", event)\r\n        var fileToUpload = event\r\n\r\n        var myFile = new FormData();\r\n        myFile.append(\"file\", fileToUpload);\r\n        $.ajax({\r\n            \"url\": 'https://chat.leader.codes/api/' + uid + '/uploadImageForHangout',\r\n            \"method\": \"POST\",\r\n            \"processData\": false,\r\n            \"mimeType\": \"multipart/form-data\",\r\n            \"contentType\": false,\r\n            \"headers\": {\r\n\r\n                \"Authorization\": jwtFromCookie\r\n\r\n            },\r\n            \"data\": myFile,\r\n            \"async\": false,\r\n            success: function (data1) {\r\n                console.log(\"success\")\r\n                console.log(data1);\r\n                setTimeout(function () { console.log(\"after setTimeOut\"); setImg(data1) }, 2000);\r\n            },\r\n            error: function (err) {\r\n                console.log(err)\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const addContactsToList = function (contact) {\r\n\r\n        if (AddContacts.includes(contact)) {\r\n            setAddContacts(AddContacts = AddContacts.filter(x => x !== contact));\r\n        }\r\n        else\r\n            setAddContacts(AddContacts = AddContacts.concat(contact));\r\n\r\n        console.log(\"AddContacts\", AddContacts)\r\n    }\r\n    const clearList = function () {\r\n        if (AddContacts.length > 0 && groupName != '') {\r\n            var hangout = { members: AddContacts, name: groupName, owner: userName }\r\n            setAddContacts([]);\r\n            var hangout = { members: AddContacts, name: groupName, profileGroup: img }\r\n            returnUsersId(hangout);\r\n            setShow();\r\n\r\n        }\r\n        // AddContactsToHangout(AddContacts);\r\n        // setShowContactList();\r\n    }\r\n    console.log(\"contact-contactList\", contacts);\r\n    return (\r\n        <div className=\"conversation-search\" >\r\n            <ConversationSearch list={contacts} kindList=\"filteredContacts\" />\r\n\r\n            <form className={classes.root} noValidate autoComplete=\"off\" style={{\r\n                display: 'flex',\r\n                alignItems: 'center'\r\n\r\n            }}>\r\n                <TextField id=\"outlined-basic\" label=\"Fill Group Name\" variant=\"outlined\" onChange={e => { setGroupName(e.target.value) }} /> <label for=\"profileImg\">\r\n                    <img className=\"img_person conversation-photo\" referrerpolicy=\"no-referrer\" src={img} /></label>\r\n                <input\r\n                    type={\"file\"}\r\n                    id=\"profileImg\"\r\n                    htmlFor=\"myInput\"\r\n                    accept=\"image/*\"\r\n                    style={{\r\n                        display: 'none',\r\n                        cursor: 'pointer',\r\n                        float: 'right'\r\n                        //   width:'5px',\r\n                    }}\r\n                    onChange={(e) => onChangeHandlerProfile(e.target.files[0])}\r\n                /></form>\r\n\r\n\r\n            {\r\n                AddContacts ? AddContacts.map((item, index) => (\r\n                    console.log(\"item\", item.email),\r\n                    <> {item.email} , </>\r\n                )) : 'null'\r\n            }\r\n            {/* <UploadImage/> */}\r\n\r\n            {/* <input type=\"file\" name=\"\" id=\"\"/> */}\r\n\r\n            {\r\n                filteredContacts.map(contact =>\r\n                    <ConversationListItem key={contact._id}\r\n                        data={contact}\r\n                        onClick={() => addContactsToList(contact)\r\n                        }\r\n                        AddContacts={AddContacts}\r\n                    />\r\n                )\r\n            }\r\n\r\n            <div className={classes.root}><Button variant=\"contained\" color=\"primary\" onClick={() => { clearList() }}>Create New Group</Button></div>\r\n        </div >\r\n\r\n    );\r\n});","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\ToolbarButton\\index.js",[],"C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\Toolbar\\index.js",[],"C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\Compose\\index.js",["186","187","188","189","190"],"import React, { useEffect, useState } from 'react';\r\nimport './Compose.css';\r\nimport $ from 'jquery';\r\nimport { actions } from '../../redux/Actions/actions'\r\nimport InputEmoji from \"react-input-emoji\";\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n// import io from 'https://socket.chat.leader.codes';\r\nimport socketIOClient from \"socket.io-client\";\r\nimport { connect } from 'react-redux'\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    messageInput:state.messageInput,\r\n    userName:state.userName,\r\n  \r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  SetMessageInput: (messageInput) =>\r\n    dispatch(actions.setMessageInput(messageInput)),\r\n    addNewWave:(wave)=> dispatch(actions.addNewWave(wave))\r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)( function Compose(props) {\r\n\r\n  const [text, setText] = useState(\"\");\r\n \r\n  function handleOnChange(text) {\r\n    // console.log(\"enter\", text);\r\n    props.SetMessageInput(text)\r\n  }\r\nfunction sendMessage(text){\r\n  const wave={\r\n    body:text,\r\n    from:props.userName\r\n  }\r\n  props.addNewWave(wave)\r\n}\r\n\r\n  //  useEffect(() => {\r\n  // if(props.messageInput==\"\")\r\n  //    $('#inputVal').val(\"\")\r\n  // }, [props.messageInput]);\r\n// const socket = socketIOClient(\"https://socket.chat.leader.codes\", { transports: ['websocket']});\r\n// useEffect(()=>{\r\n//   socket.on('send_message', function (msg) {\r\n\r\n//     console.log(\"send\", msg);\r\n//     $('.compose-input').append($('<div>').html(msg+\"111\"));\r\n//     // localStorageSave(msg);\r\n//   });\r\n  \r\n//       // append text if someone is online\r\n//       socket.on('is_online', function (msg, type) {\r\n//           console.log(type);\r\n          \r\n         \r\n//           if (type == 'left') {\r\n//           }\r\n  \r\n//       });\r\n//       let username = \"mindy\";\r\n     \r\n//       let hangoutID = \"318412160\";\r\n\r\n  \r\n//       if (username != '' && username != undefined && hangoutID != '' && hangoutID != undefined) {\r\n//            console.log(\"huu\");\r\n  \r\n//           socket.emit('user', username, hangoutID);\r\n//       } \r\n// },[])\r\n \r\n  // socket.on(\"connection\", data => \r\n  // {\r\n  //  //do function\r\n  // })\r\n  // let ioConect = 'https://socket.chat.leader.codes'\r\n  // let socket = io.connect(ioConect)\r\n  \r\n    // document.getElementById('inputVal').value=''\r\n    // document.getElementById('inputVal').placeholder= e.target.value\r\n    // props.setEmoji(e.key)\r\n  \r\n \r\n    return (\r\n      <div className=\"compose\">\r\n    <InputEmoji\r\n    className=\"compose-input\"\r\n     id=\"inputVal\"\r\n      value={props.messageInput}\r\n      onChange={setText,handleOnChange}\r\n      // onChange={()=>{setText(); loger()}}\r\n      cleanOnEnter\r\n      onEnter={sendMessage}\r\n      placeholder=\"Type a message\"\r\n    />\r\n        {/* <input\r\n        id=\"inputVal\"\r\n          type=\"text\"\r\n          onKeyUp={(e)=>changeVal(e)}\r\n          className=\"compose-input\"\r\n          // placeholder={props.currentEmoji}\r\n          value={props.currentEmoji?props.currentEmoji:inputValue}\r\n        /> */}\r\n        {  \r\n          props.rightItems\r\n        }\r\n\r\n      </div>\r\n    );\r\n})\r\n\r\n\r\n\r\n\r\n","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\Message\\index.js",["191","192","193","194","195","196","197","198"],"\r\nimport React, { useEffect, useState } from 'react';\r\nimport moment from 'moment';\r\n\r\nimport './Message.css';\r\nimport { connect } from 'react-redux';\r\nimport { actions } from '../../redux/Actions/actions'\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    stateConversation: state.listConvesation,\r\n    userName: state.userName,\r\n    listConvesation:state.listConvesation\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setCurrentConversation: (conversation) =>\r\n    dispatch(actions.setConversation(conversation)),\r\n  getUsernameReturnEmail: (username) => dispatch(actions.getUsernameReturnEmail(username))\r\n\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(function Message(props) {\r\n  // useEffect(() => {\r\n  // debugger;\r\n  // },[props.listConvesation])\r\n  const { getUsernameReturnEmail, stateConversation, userName, setCurrentConversation } = props;\r\n  const {\r\n    data,\r\n    isMine,\r\n    startsSequence,\r\n    endsSequence,\r\n    showTimestamp,\r\n    name\r\n  } = props;\r\n  const friendlyTimestamp = moment(data.timestamp).format('LLLL');\r\n  async function func() {\r\n    var contactEmail = await getUsernameReturnEmail(data.from);\r\n    window.location = `https://contacts.leader.codes/${userName}?c=\"${contactEmail}\"`\r\n\r\n\r\n  }\r\n\r\n\r\n  if (userName != data.from) {\r\n    return (\r\n      <div className={['message'].join(' ')}>\r\n        {\r\n          showTimestamp &&\r\n          <div className=\"timestamp\">\r\n            {friendlyTimestamp}\r\n          </div>\r\n        }\r\n        <div className=\"bubble-container\">\r\n          <div className=\"bubble\" title={friendlyTimestamp}>\r\n            {data.body}\r\n\r\n          </div>\r\n          {/* <p class=\"sentText pr-10\">{name}</p> */}\r\n        </div>\r\n        {/* `https://contacts.leader.codes/${userName}` */}\r\n        <a href=\"#\" onClick={(e) => { func(); return false; }} class=\"active\">\r\n\r\n          <div class=\"from2\" >{data.from}</div> </a>\r\n\r\n          \r\n      </div>\r\n    );\r\n  }\r\n  else {\r\n    return (\r\n      <div className={[\r\n        'message', 'mine', 'start'\r\n\r\n      ].join(' ')}>\r\n        {\r\n          showTimestamp &&\r\n          <div className=\"timestamp\">\r\n            {friendlyTimestamp}\r\n          </div>\r\n        }\r\n        <div >\r\n          <div className=\"bubble-container\">\r\n            <div className=\"bubble\" title={friendlyTimestamp}>\r\n              {data.body}\r\n              {/* <div  class=\"from\" >{data.from}</div>  */}\r\n\r\n            </div>\r\n\r\n            {/* <div>{data.from}</div>   */}\r\n\r\n          </div>\r\n          {/* <a href=\"#\"onClick={(e)=>{func(); return false;}} class=\"active\">\r\n\r\n            <div class=\"from\" >{data.from}</div> </a> */}\r\n\r\n          <div class=\"from\" >ME</div>\r\n\r\n        </div>\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n})","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\UploadImage\\index.js",["199"],"\r\nimport React from 'react';\r\nimport ImageUploader from 'react-images-upload';\r\n\r\nexport default class UploadImage extends React.Component {\r\n   \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { pictures: [] };\r\n        this.onDrop = this.onDrop.bind(this);\r\n    }\r\n\r\n    onDrop(pictureFiles, pictureDataURLs) {\r\n        console.log(pictureFiles);\r\n        this.setState({\r\n            pictures: pictureFiles\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (<>\r\n            <ImageUploader\r\n                withIcon={true}\r\n                buttonText='Choose images'\r\n                onChange={this.onDrop}\r\n                imgExtension={['.jpg', '.gif', '.png', '.gif']}\r\n                maxFileSize={5242880}\r\n            />\r\n            <img src={this.state.pictures[0]}/>\r\n</>\r\n\r\n        );\r\n    }\r\n}",{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","replacedBy":"203"},{"ruleId":"204","severity":1,"message":"205","line":2,"column":10,"nodeType":"206","messageId":"207","endLine":2,"endColumn":16},{"ruleId":"204","severity":1,"message":"208","line":4,"column":8,"nodeType":"206","messageId":"207","endLine":4,"endColumn":19},{"ruleId":"204","severity":1,"message":"209","line":8,"column":8,"nodeType":"206","messageId":"207","endLine":8,"endColumn":10},{"ruleId":"204","severity":1,"message":"210","line":9,"column":7,"nodeType":"206","messageId":"207","endLine":9,"endColumn":16},{"ruleId":"211","severity":1,"message":"212","line":39,"column":6,"nodeType":"213","messageId":"214","endLine":135,"endColumn":7},{"ruleId":"215","severity":1,"message":"216","line":50,"column":44,"nodeType":"217","messageId":"218","endLine":50,"endColumn":46},{"ruleId":"215","severity":1,"message":"216","line":52,"column":49,"nodeType":"217","messageId":"218","endLine":52,"endColumn":51},{"ruleId":"215","severity":1,"message":"216","line":54,"column":49,"nodeType":"217","messageId":"218","endLine":54,"endColumn":51},{"ruleId":"215","severity":1,"message":"216","line":56,"column":49,"nodeType":"217","messageId":"218","endLine":56,"endColumn":51},{"ruleId":"215","severity":1,"message":"216","line":58,"column":49,"nodeType":"217","messageId":"218","endLine":58,"endColumn":51},{"ruleId":"215","severity":1,"message":"219","line":89,"column":35,"nodeType":"217","messageId":"218","endLine":89,"endColumn":37},{"ruleId":"215","severity":1,"message":"219","line":95,"column":35,"nodeType":"217","messageId":"218","endLine":95,"endColumn":37},{"ruleId":"215","severity":1,"message":"219","line":102,"column":35,"nodeType":"217","messageId":"218","endLine":102,"endColumn":37},{"ruleId":"215","severity":1,"message":"219","line":108,"column":35,"nodeType":"217","messageId":"218","endLine":108,"endColumn":37},{"ruleId":"204","severity":1,"message":"208","line":2,"column":8,"nodeType":"206","messageId":"207","endLine":2,"endColumn":19},{"ruleId":"204","severity":1,"message":"220","line":1,"column":27,"nodeType":"206","messageId":"207","endLine":1,"endColumn":36},{"ruleId":"204","severity":1,"message":"221","line":34,"column":43,"nodeType":"206","messageId":"207","endLine":34,"endColumn":63},{"ruleId":"204","severity":1,"message":"222","line":34,"column":65,"nodeType":"206","messageId":"207","endLine":34,"endColumn":72},{"ruleId":"204","severity":1,"message":"223","line":37,"column":10,"nodeType":"206","messageId":"207","endLine":37,"endColumn":13},{"ruleId":"204","severity":1,"message":"224","line":37,"column":15,"nodeType":"206","messageId":"207","endLine":37,"endColumn":21},{"ruleId":"225","severity":1,"message":"226","line":59,"column":48,"nodeType":"227","messageId":"228","endLine":59,"endColumn":49},{"ruleId":"215","severity":1,"message":"216","line":192,"column":27,"nodeType":"217","messageId":"218","endLine":192,"endColumn":29},{"ruleId":"215","severity":1,"message":"216","line":7,"column":28,"nodeType":"217","messageId":"218","endLine":7,"endColumn":30},{"ruleId":"215","severity":1,"message":"216","line":9,"column":44,"nodeType":"217","messageId":"218","endLine":9,"endColumn":46},{"ruleId":"215","severity":1,"message":"216","line":11,"column":43,"nodeType":"217","messageId":"218","endLine":11,"endColumn":45},{"ruleId":"215","severity":1,"message":"216","line":13,"column":44,"nodeType":"217","messageId":"218","endLine":13,"endColumn":46},{"ruleId":"215","severity":1,"message":"216","line":16,"column":33,"nodeType":"217","messageId":"218","endLine":16,"endColumn":35},{"ruleId":"215","severity":1,"message":"216","line":17,"column":42,"nodeType":"217","messageId":"218","endLine":17,"endColumn":44},{"ruleId":"215","severity":1,"message":"216","line":20,"column":51,"nodeType":"217","messageId":"218","endLine":20,"endColumn":53},{"ruleId":"215","severity":1,"message":"216","line":25,"column":44,"nodeType":"217","messageId":"218","endLine":25,"endColumn":46},{"ruleId":"215","severity":1,"message":"216","line":27,"column":43,"nodeType":"217","messageId":"218","endLine":27,"endColumn":45},{"ruleId":"215","severity":1,"message":"216","line":32,"column":33,"nodeType":"217","messageId":"218","endLine":32,"endColumn":35},{"ruleId":"215","severity":1,"message":"216","line":34,"column":45,"nodeType":"217","messageId":"218","endLine":34,"endColumn":47},{"ruleId":"215","severity":1,"message":"216","line":36,"column":44,"nodeType":"217","messageId":"218","endLine":36,"endColumn":46},{"ruleId":"215","severity":1,"message":"216","line":38,"column":43,"nodeType":"217","messageId":"218","endLine":38,"endColumn":45},{"ruleId":"215","severity":1,"message":"216","line":41,"column":33,"nodeType":"217","messageId":"218","endLine":41,"endColumn":35},{"ruleId":"215","severity":1,"message":"216","line":42,"column":41,"nodeType":"217","messageId":"218","endLine":42,"endColumn":43},{"ruleId":"215","severity":1,"message":"216","line":45,"column":49,"nodeType":"217","messageId":"218","endLine":45,"endColumn":51},{"ruleId":"215","severity":1,"message":"216","line":49,"column":44,"nodeType":"217","messageId":"218","endLine":49,"endColumn":46},{"ruleId":"215","severity":1,"message":"216","line":51,"column":44,"nodeType":"217","messageId":"218","endLine":51,"endColumn":46},{"ruleId":"215","severity":1,"message":"219","line":28,"column":13,"nodeType":"217","messageId":"218","endLine":28,"endColumn":15},{"ruleId":"215","severity":1,"message":"216","line":52,"column":21,"nodeType":"217","messageId":"218","endLine":52,"endColumn":23},{"ruleId":"215","severity":1,"message":"219","line":52,"column":55,"nodeType":"217","messageId":"218","endLine":52,"endColumn":57},{"ruleId":"215","severity":1,"message":"216","line":56,"column":21,"nodeType":"217","messageId":"218","endLine":56,"endColumn":23},{"ruleId":"215","severity":1,"message":"219","line":56,"column":55,"nodeType":"217","messageId":"218","endLine":56,"endColumn":57},{"ruleId":"215","severity":1,"message":"219","line":60,"column":27,"nodeType":"217","messageId":"218","endLine":60,"endColumn":29},{"ruleId":"204","severity":1,"message":"220","line":1,"column":17,"nodeType":"206","messageId":"207","endLine":1,"endColumn":26},{"ruleId":"204","severity":1,"message":"229","line":2,"column":8,"nodeType":"206","messageId":"207","endLine":2,"endColumn":13},{"ruleId":"204","severity":1,"message":"230","line":5,"column":10,"nodeType":"206","messageId":"207","endLine":5,"endColumn":17},{"ruleId":"204","severity":1,"message":"231","line":6,"column":10,"nodeType":"206","messageId":"207","endLine":6,"endColumn":18},{"ruleId":"204","severity":1,"message":"232","line":6,"column":20,"nodeType":"206","messageId":"207","endLine":6,"endColumn":23},{"ruleId":"204","severity":1,"message":"233","line":24,"column":11,"nodeType":"206","messageId":"207","endLine":24,"endColumn":28},{"ruleId":"204","severity":1,"message":"234","line":24,"column":30,"nodeType":"206","messageId":"207","endLine":24,"endColumn":52},{"ruleId":"204","severity":1,"message":"235","line":24,"column":54,"nodeType":"206","messageId":"207","endLine":24,"endColumn":65},{"ruleId":"204","severity":1,"message":"236","line":17,"column":16,"nodeType":"206","messageId":"207","endLine":17,"endColumn":26},{"ruleId":"204","severity":1,"message":"237","line":42,"column":7,"nodeType":"206","messageId":"207","endLine":42,"endColumn":17},{"ruleId":"204","severity":1,"message":"234","line":49,"column":64,"nodeType":"206","messageId":"207","endLine":49,"endColumn":86},{"ruleId":"204","severity":1,"message":"238","line":49,"column":105,"nodeType":"206","messageId":"207","endLine":49,"endColumn":116},{"ruleId":"204","severity":1,"message":"239","line":54,"column":10,"nodeType":"206","messageId":"207","endLine":54,"endColumn":19},{"ruleId":"204","severity":1,"message":"240","line":55,"column":10,"nodeType":"206","messageId":"207","endLine":55,"endColumn":25},{"ruleId":"204","severity":1,"message":"241","line":55,"column":27,"nodeType":"206","messageId":"207","endLine":55,"endColumn":45},{"ruleId":"204","severity":1,"message":"242","line":57,"column":10,"nodeType":"206","messageId":"207","endLine":57,"endColumn":14},{"ruleId":"204","severity":1,"message":"243","line":57,"column":16,"nodeType":"206","messageId":"207","endLine":57,"endColumn":23},{"ruleId":"204","severity":1,"message":"244","line":58,"column":10,"nodeType":"206","messageId":"207","endLine":58,"endColumn":14},{"ruleId":"204","severity":1,"message":"245","line":58,"column":16,"nodeType":"206","messageId":"207","endLine":58,"endColumn":23},{"ruleId":"204","severity":1,"message":"246","line":59,"column":10,"nodeType":"206","messageId":"207","endLine":59,"endColumn":15},{"ruleId":"204","severity":1,"message":"247","line":60,"column":10,"nodeType":"206","messageId":"207","endLine":60,"endColumn":17},{"ruleId":"204","severity":1,"message":"248","line":60,"column":19,"nodeType":"206","messageId":"207","endLine":60,"endColumn":29},{"ruleId":"249","severity":1,"message":"250","line":69,"column":14,"nodeType":"251","endLine":69,"endColumn":53},{"ruleId":"204","severity":1,"message":"252","line":109,"column":13,"nodeType":"206","messageId":"207","endLine":109,"endColumn":29},{"ruleId":"204","severity":1,"message":"253","line":1,"column":17,"nodeType":"206","messageId":"207","endLine":1,"endColumn":25},{"ruleId":"204","severity":1,"message":"220","line":1,"column":27,"nodeType":"206","messageId":"207","endLine":1,"endColumn":36},{"ruleId":"204","severity":1,"message":"208","line":11,"column":8,"nodeType":"206","messageId":"207","endLine":11,"endColumn":19},{"ruleId":"204","severity":1,"message":"232","line":12,"column":10,"nodeType":"206","messageId":"207","endLine":12,"endColumn":13},{"ruleId":"204","severity":1,"message":"254","line":33,"column":11,"nodeType":"206","messageId":"207","endLine":33,"endColumn":24},{"ruleId":"204","severity":1,"message":"255","line":36,"column":11,"nodeType":"206","messageId":"207","endLine":36,"endColumn":27},{"ruleId":"204","severity":1,"message":"256","line":38,"column":17,"nodeType":"206","messageId":"207","endLine":38,"endColumn":33},{"ruleId":"204","severity":1,"message":"253","line":1,"column":17,"nodeType":"206","messageId":"207","endLine":1,"endColumn":25},{"ruleId":"204","severity":1,"message":"220","line":1,"column":27,"nodeType":"206","messageId":"207","endLine":1,"endColumn":36},{"ruleId":"215","severity":1,"message":"216","line":53,"column":25,"nodeType":"217","messageId":"218","endLine":53,"endColumn":27},{"ruleId":"215","severity":1,"message":"216","line":53,"column":44,"nodeType":"217","messageId":"218","endLine":53,"endColumn":46},{"ruleId":"204","severity":1,"message":"220","line":1,"column":27,"nodeType":"206","messageId":"207","endLine":1,"endColumn":36},{"ruleId":"204","severity":1,"message":"221","line":48,"column":47,"nodeType":"206","messageId":"207","endLine":48,"endColumn":67},{"ruleId":"204","severity":1,"message":"222","line":48,"column":69,"nodeType":"206","messageId":"207","endLine":48,"endColumn":76},{"ruleId":"204","severity":1,"message":"257","line":48,"column":78,"nodeType":"206","messageId":"207","endLine":48,"endColumn":96},{"ruleId":"215","severity":1,"message":"219","line":67,"column":49,"nodeType":"217","messageId":"218","endLine":67,"endColumn":51},{"ruleId":"225","severity":1,"message":"226","line":87,"column":48,"nodeType":"227","messageId":"228","endLine":87,"endColumn":49},{"ruleId":"204","severity":1,"message":"220","line":1,"column":17,"nodeType":"206","messageId":"207","endLine":1,"endColumn":26},{"ruleId":"204","severity":1,"message":"258","line":3,"column":8,"nodeType":"206","messageId":"207","endLine":3,"endColumn":9},{"ruleId":"204","severity":1,"message":"259","line":8,"column":8,"nodeType":"206","messageId":"207","endLine":8,"endColumn":22},{"ruleId":"204","severity":1,"message":"260","line":26,"column":10,"nodeType":"206","messageId":"207","endLine":26,"endColumn":14},{"ruleId":"225","severity":1,"message":"226","line":80,"column":24,"nodeType":"227","messageId":"228","endLine":80,"endColumn":25},{"ruleId":"204","severity":1,"message":"233","line":20,"column":35,"nodeType":"206","messageId":"207","endLine":20,"endColumn":52},{"ruleId":"204","severity":1,"message":"234","line":20,"column":64,"nodeType":"206","messageId":"207","endLine":20,"endColumn":86},{"ruleId":"204","severity":1,"message":"261","line":23,"column":5,"nodeType":"206","messageId":"207","endLine":23,"endColumn":11},{"ruleId":"204","severity":1,"message":"262","line":24,"column":5,"nodeType":"206","messageId":"207","endLine":24,"endColumn":19},{"ruleId":"204","severity":1,"message":"263","line":25,"column":5,"nodeType":"206","messageId":"207","endLine":25,"endColumn":17},{"ruleId":"204","severity":1,"message":"242","line":27,"column":5,"nodeType":"206","messageId":"207","endLine":27,"endColumn":9},{"ruleId":"215","severity":1,"message":"219","line":38,"column":16,"nodeType":"217","messageId":"218","endLine":38,"endColumn":18},{"ruleId":"264","severity":1,"message":"265","line":55,"column":9,"nodeType":"266","endLine":55,"endColumn":79},{"ruleId":"267","severity":1,"message":"268","line":29,"column":13,"nodeType":"266","endLine":29,"endColumn":48},"no-native-reassign",["269"],"no-negated-in-lhs",["270"],"no-unused-vars","'Socket' is defined but never used.","Identifier","unusedVar","'ContactList' is defined but never used.","'io' is defined but never used.","'ENDPOINT2' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'useEffect' is defined but never used.","'AddContactsToHangout' is assigned a value but never used.","'members' is assigned a value but never used.","'con' is assigned a value but never used.","'setCon' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'shave' is defined but never used.","'actions' is defined but never used.","'blueGrey' is defined but never used.","'red' is defined but never used.","'stateConversation' is assigned a value but never used.","'setCurrentConversation' is assigned a value but never used.","'AddContacts' is assigned a value but never used.","'InlineIcon' is defined but never used.","'MY_USER_ID' is assigned a value but never used.","'showContact' is assigned a value but never used.","'messages2' is assigned a value but never used.","'showMyComponent' is assigned a value but never used.","'setShowMyComponent' is assigned a value but never used.","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","'room' is assigned a value but never used.","'setRoom' is assigned a value but never used.","'users' is assigned a value but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'socket' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'prevBySameAuthor' is assigned a value but never used.","'useState' is defined but never used.","'conversations' is assigned a value but never used.","'getConversations' is assigned a value but never used.","'newConversations' is assigned a value but never used.","'setShowContactList' is assigned a value but never used.","'$' is defined but never used.","'socketIOClient' is defined but never used.","'text' is assigned a value but never used.","'isMine' is assigned a value but never used.","'startsSequence' is assigned a value but never used.","'endsSequence' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]