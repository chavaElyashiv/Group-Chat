[{"C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\index.js":"1","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\serviceWorker.js":"2","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\App\\index.js":"3","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\redux\\Stores\\store.js":"4","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\Messenger\\index.js":"5","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\ContactList\\index.js":"6","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\redux\\MiddleWares\\conversation.js":"7","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\redux\\MiddleWares\\contact.js":"8","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\redux\\Actions\\actions.js":"9","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\ConversationSearch\\index.js":"10","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\ConversationListItem\\index.js":"11","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\MessageList\\index.js":"12","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\ConversationList\\index.js":"13","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\MembersList\\index.js":"14","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\NewHangout\\index.js":"15","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\ToolbarButton\\index.js":"16","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\Toolbar\\index.js":"17","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\Compose\\index.js":"18","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\Message\\index.js":"19","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\UploadImage\\index.js":"20","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\Compose2\\index.js":"21","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\socket.js":"22","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\redux\\Stores\\Reducers\\User.js":"23","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\redux\\Stores\\Reducers\\FilteredLists.js":"24","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\redux\\Stores\\Reducers\\Hangout.js":"25","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\redux\\Stores\\Reducers\\Contact.js":"26","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\redux\\Stores\\Reducers\\ReducerUtils.js":"27"},{"size":826,"mtime":1611752719443,"results":"28","hashOfConfig":"29"},{"size":5083,"mtime":1608022793617,"results":"30","hashOfConfig":"29"},{"size":305,"mtime":1612877346236,"results":"31","hashOfConfig":"29"},{"size":1446,"mtime":1612876251450,"results":"32","hashOfConfig":"29"},{"size":1146,"mtime":1611145918525,"results":"33","hashOfConfig":"29"},{"size":2598,"mtime":1612183334778,"results":"34","hashOfConfig":"29"},{"size":12330,"mtime":1612877346240,"results":"35","hashOfConfig":"29"},{"size":7065,"mtime":1612262236370,"results":"36","hashOfConfig":"29"},{"size":717,"mtime":1612183334788,"results":"37","hashOfConfig":"29"},{"size":2395,"mtime":1609164220038,"results":"38","hashOfConfig":"29"},{"size":4452,"mtime":1612877346239,"results":"39","hashOfConfig":"29"},{"size":7721,"mtime":1612876251448,"results":"40","hashOfConfig":"29"},{"size":2749,"mtime":1612186660343,"results":"41","hashOfConfig":"29"},{"size":2294,"mtime":1612876251447,"results":"42","hashOfConfig":"29"},{"size":6207,"mtime":1612183334783,"results":"43","hashOfConfig":"29"},{"size":251,"mtime":1608199786533,"results":"44","hashOfConfig":"29"},{"size":390,"mtime":1606999432516,"results":"45","hashOfConfig":"29"},{"size":5765,"mtime":1612186660339,"results":"46","hashOfConfig":"29"},{"size":2782,"mtime":1612183334781,"results":"47","hashOfConfig":"29"},{"size":854,"mtime":1612183334785,"results":"48","hashOfConfig":"29"},{"size":5696,"mtime":1612877346237,"results":"49","hashOfConfig":"29"},{"size":214,"mtime":1612877346248,"results":"50","hashOfConfig":"29"},{"size":465,"mtime":1612183334794,"results":"51","hashOfConfig":"29"},{"size":1035,"mtime":1612183334791,"results":"52","hashOfConfig":"29"},{"size":2358,"mtime":1612877346244,"results":"53","hashOfConfig":"29"},{"size":705,"mtime":1612183334789,"results":"54","hashOfConfig":"29"},{"size":334,"mtime":1612183334793,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"k628pm",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"58"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"58"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\index.js",[],["124","125"],"C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\serviceWorker.js",[],"C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\App\\index.js",[],"C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\redux\\Stores\\store.js",[],"C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\Messenger\\index.js",["126"],"import React from 'react';\r\nimport ContactList from '../ContactList';\r\nimport ConversationList from '../ConversationList';\r\nimport MessageList from '../MessageList';\r\nimport './Messenger.css';\r\n\r\nexport default function Messenger(props) {\r\n  return (\r\n    <div className=\"messenger\">\r\n      {/* <Toolbar\r\n          title=\"Messenger\"\r\n          leftItems={[\r\n            <ToolbarButton key=\"cog\" icon=\"ion-ios-cog\" />\r\n          ]}\r\n          rightItems={[\r\n            <ToolbarButton key=\"add\" icon=\"ion-ios-add-circle-outline\" />\r\n          ]}\r\n        /> */}\r\n\r\n      {/* <Toolbar\r\n          title=\"Conversation Title\"\r\n          rightItems={[\r\n            <ToolbarButton key=\"info\" icon=\"ion-ios-information-circle-outline\" />,\r\n            <ToolbarButton key=\"video\" icon=\"ion-ios-videocam\" />,\r\n            <ToolbarButton key=\"phone\" icon=\"ion-ios-call\" />\r\n          ]}\r\n        /> */}\r\n\r\n      <div className=\"scrollable sidebar\">\r\n        <ConversationList />\r\n\r\n      </div>\r\n\r\n      <div className=\"scrollable content\">\r\n\r\n        <MessageList />\r\n      </div>\r\n      {/* <div maxwidth=\"mm\"><ContactList/></div> */}\r\n    </div>\r\n  );\r\n}","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\ContactList\\index.js",["127","128","129","130","131","132"],"import React, { useState, useEffect } from 'react';\r\nimport ConversationListItem from '../ConversationListItem';\r\nimport { actions } from '../../redux/Actions/actions'\r\nimport { connect } from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport ConversationSearch from '../ConversationSearch/index'\r\n\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        contacts: state.contactsReducer.hangoutsContacts,\r\n        members: state.hangoutReducer.members,\r\n        filteredAddContacts: state.filteredListReducer.filteredAddContacts\r\n    }\r\n\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n}));\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n    AddContactsToHangout: (AddContacts) =>\r\n        dispatch(actions.addContactsToHangout(AddContacts)),\r\n    setShowContactList: () => dispatch(actions.setShow(\"members\"))\r\n\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(function ContactList(props) {\r\n    const { filteredAddContacts, contacts, AddContactsToHangout, members, setShowContactList } = props;\r\n    const classes = useStyles();\r\n    var [AddContacts, setAddContacts] = useState([]);\r\n    var [con, setCon] = useState([]);\r\n\r\n    const addContactsToList = function (contact) {\r\n\r\n        if (AddContacts.includes(contact)) {\r\n            setAddContacts(AddContacts = AddContacts.filter(x => x !== contact));\r\n        }\r\n\r\n        else\r\n            setAddContacts(AddContacts = AddContacts.concat(contact));\r\n\r\n\r\n        console.log(\"AddContacts\", AddContacts)\r\n\r\n    }\r\n\r\n    console.log(\"contact-contactList\", contacts);\r\n    return (\r\n        <div className=\"conversation-list\" >\r\n            <ConversationSearch list={contacts} kindList=\"filteredAddContacts\" />\r\n\r\n            {AddContacts ? AddContacts.map((item, index) => (\r\n                console.log(\"item\", item.email),\r\n                <> {item.email} , </>\r\n            )) : 'null'}\r\n\r\n            {\r\n                filteredAddContacts.map(contact =>\r\n                    <ConversationListItem key={contact._id}\r\n                        data={contact}\r\n                        onClick={() => addContactsToList(contact)\r\n                        }\r\n                        AddContacts={AddContacts}\r\n                    />\r\n                )\r\n            }\r\n\r\n            <div className={classes.root}><Button variant=\"contained\" color=\"primary\" onClick={() => { setShowContactList() }}>ADD CONTACTS</Button></div>\r\n        </div>\r\n\r\n    );\r\n})","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\redux\\MiddleWares\\conversation.js",["133"],"C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\redux\\MiddleWares\\contact.js",["134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151"],"import { actions } from '../Actions/actions'\r\n\r\n\r\nexport const setShow = ({ dispatch, getState }) => next => action => {\r\n    if (action.type === 'SET_SHOW') {\r\n\r\n        if (action.payload == 'messages') {\r\n            dispatch(actions.setShowMessagesList(true));\r\n            if (getState().contactsReducer.showContactList == true)\r\n                dispatch(actions.setShowContactList());\r\n            if (getState().hangoutReducer.showNewHangout == true)\r\n                dispatch(actions.setShowNewHangout());\r\n            if (getState().hangoutReducer.showMembersList == true)\r\n                dispatch(actions.setShowMembersList());\r\n        }\r\n        else if (action.payload == 'members') {\r\n            if (getState().hangoutReducer.showMembersList == true) {\r\n                dispatch(actions.setShowMessagesList());\r\n            }\r\n            else if (getState().hangoutReducer.showMessagesList == true)\r\n                dispatch(actions.setShowMessagesList());\r\n\r\n            dispatch(actions.setShowMembersList());\r\n\r\n            if (getState().contactsReducer.showContactList == true)\r\n                dispatch(actions.setShowContactList());\r\n            if (getState().hangoutReducer.showNewHangout == true)\r\n                dispatch(actions.setShowNewHangout());\r\n            // if (getState().showNewHangout == false &&getState().showContactList == false &&getState().showMessagesList == false)\r\n            // dispatch(actions.setShowMessagesList());\r\n        }\r\n        else if (action.payload == 'contacts') {\r\n            dispatch(actions.setShowContactList());\r\n            if (getState().hangoutReducer.showMessagesList == true)\r\n                dispatch(actions.setShowMessagesList());\r\n            if (getState().hangoutReducer.showMembersList == true)\r\n                dispatch(actions.setShowMembersList());\r\n            if (getState().hangoutReducer.showNewHangout == true)\r\n                dispatch(actions.setShowNewHangout());\r\n        }\r\n        else if (action.payload == 'newHangout') {\r\n            if (getState().hangoutReducer.showNewHangout == true) {\r\n                dispatch(actions.setShowMessagesList());\r\n            }\r\n            else if (getState().hangoutReducer.showMessagesList == true)\r\n                dispatch(actions.setShowMessagesList());\r\n            dispatch(actions.setShowNewHangout());\r\n\r\n            if (getState().contactsReducer.showContactList == true)\r\n                dispatch(actions.setShowContactList());\r\n            if (getState().hangoutReducer.showMembersList == true)\r\n                dispatch(actions.setShowMembersList());\r\n        }\r\n    }\r\n    return next(action);\r\n\r\n}\r\n//getAllContactsExceptMembers\r\nexport const getAllContactsExceptMembers = ({ dispatch, getState }) => next => action => {\r\n    if (action.type === 'GET_ALL_CONTACTS_EXCEPT_MEMBERS') {\r\n        return fetch(`https://chat.leader.codes/api/${getState().userReducer.userName}/${getState().hangoutReducer.hangout}/getAllContactsExceptMembers`, {\r\n            method: 'POST',\r\n            headers: {\r\n                Authentication: getState().userReducer.jwt,\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then((res) => {\r\n            return res.json()\r\n\r\n\r\n        })\r\n            .then((res) => {\r\n                //  checkPermission(res).then((ifOk) => {\r\n                console.log(\"contacts\", res)\r\n                dispatch(actions.setHangoutsContacts(res.contacts));\r\n                dispatch(actions.setFilteredList({ list: res.contacts, kindList: \"filteredAddContacts\" }));\r\n            })\r\n        //  })\r\n    }\r\n    return next(action);\r\n}\r\nexport const getContactsForUser = ({ dispatch, getState }) => next => action => {\r\n    if (action.type === 'GET_CONTACTS_FOR_USER') {\r\n        return fetch(`https://chat.leader.codes/api/${getState().userReducer.userName}/getAllContacts`, {\r\n            method: 'POST',\r\n            headers: {\r\n                Authentication: getState().userReducer.jwt,\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then((res) => {\r\n            return res.json()\r\n\r\n\r\n        })\r\n            .then((res) => {\r\n                //     checkPermission(res).then((ifOk) => {\r\n                console.log(\"contacts\", res)\r\n                dispatch(actions.setContacts(res.contacts));\r\n                dispatch(actions.setFilteredList({ list: res.contacts, kindList: \"filteredContacts\" }));\r\n\r\n            })\r\n\r\n        // })\r\n    }\r\n    return next(action);\r\n}\r\n\r\nexport const AddContactsToHangout = ({ dispatch, getState }) => next => action => {\r\n    if (action.type === 'ADD_CONTACTS_TO_HANGOUT') {\r\n        action.payload.forEach(element => {\r\n            return fetch(`https://chat.leader.codes/api/${getState().userReducer.userName}/${getState().hangoutReducer.hangout}/addNewMember`, {\r\n                method: 'POST',\r\n                body: JSON.stringify({ contactID: element._id }),\r\n                headers: {\r\n                    Authentication: getState().userReducer.jwt,\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }).then((res) => {\r\n                return res.json()\r\n\r\n\r\n            })\r\n                .then((res) => {\r\n                    //      checkPermission(res).then((ifOk) => {\r\n                    console.log(\"contacts\", res)\r\n                    if (res.contact)\r\n                        dispatch(actions.addMember(res.contact));\r\n                })\r\n\r\n        })\r\n\r\n        // });\r\n    }\r\n    return next(action);\r\n}\r\n\r\nexport const getAllHangoutMembers = ({ dispatch, getState }) => next => action => {\r\n    if (action.type === 'GET_ALL_HANGOUT_MEMBERS') {\r\n\r\n        return fetch(`https://chat.leader.codes/api/${getState().userReducer.userName}/${getState().hangoutReducer.hangout}/getAllHangoutMembers`, {\r\n            method: 'POST',\r\n            headers: {\r\n                Authentication: getState().userReducer.jwt,\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then((res) => {\r\n            return res.json()\r\n\r\n\r\n        })\r\n            .then((res) => {\r\n                //      checkPermission(res).then((ifOk) => {\r\n                console.log(\"contacts\", res)\r\n                dispatch(actions.setFilteredList({ list: res.memberList, kindList: \"filteredMembers\" }));\r\n\r\n\r\n\r\n            })\r\n        //   })\r\n\r\n\r\n    }\r\n    return next(action);\r\n}\r\n// function checkPermission(result) {\r\n//     return new Promise((resolve, reject) => {\r\n//         if (result.status == \"401\") {\r\n//             result.routes ?\r\n//                 window.location.assign(`https://dev.leader.codes/login?des=${result.des}'&routes='${result.routes}`) :\r\n//                 window.location.assign(`https://dev.leader.codes/login?des=${result.des}`)\r\n//             reject(false)\r\n\r\n//         }\r\n//         resolve(true)\r\n\r\n//     })\r\n// }","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\redux\\Actions\\actions.js",[],"C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\ConversationSearch\\index.js",["152","153","154","155","156","157"],"import React from 'react';\r\nimport './ConversationSearch.css';\r\nimport { connect } from 'react-redux'\r\nimport {actions} from '../../redux/Actions/actions'\r\nfunction mapStateToProps(state) {\r\n  return {\r\n     // hangouts: state.hangouts,\r\n     // filteredList: state.filteredList\r\n  }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setSearchReasult: (list,kindList) => dispatch(actions.setFilteredList({list,kindList}))\r\n  \r\n})\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(function ConversationSearch(props) {\r\n  const conversations=props.list;\r\n  const {setSearchReasult,kindList} = props\r\n  let filteredList=props.list;\r\n  console.log(\"l;l;\",props.list);\r\n  \r\n  filteredList=conversations;\r\n  setSearchReasult(filteredList,kindList);\r\n  function search (eve) {\r\n  \r\n    if (eve != \"\") {\r\n        console.log(eve);\r\n        searchConversations(eve)\r\n    } else {\r\n      console.log(\"press somthing \");\r\n      \r\n      filteredList=conversations \r\n     // if(kindList==\"filteredHangouts\")\r\n      setSearchReasult(filteredList,kindList)\r\n    }\r\n}\r\n\r\nfunction searchConversations(searchText) {\r\n \r\n  filteredList=[];\r\n  \r\n  //if(kindList==\"filteredHangouts\")\r\n  setSearchReasult(filteredList,kindList)\r\n  \r\n    // filteredList = []\r\n    conversations.forEach(item => {\r\n   //   \"kindList==\"filteredHangouts\" && \"\r\n    \r\n        //if the subject contains the searchTxt\r\n        if (kindList==\"filteredMessages\" && item.body != undefined && item.body.toLowerCase().indexOf(searchText) > -1) {\r\n           filteredList.push(item);\r\n           setSearchReasult(filteredList,kindList)\r\n        }\r\n        if (kindList==\"filteredMembers\" && item.email != undefined && item.email.toLowerCase().indexOf(searchText) > -1) {\r\n            filteredList.push(item);\r\n            setSearchReasult(filteredList,kindList)\r\n         }\r\n      else  if (item.name != undefined && item.name.toLowerCase().indexOf(searchText) > -1) {\r\n          console.log(item.name);\r\n          filteredList.push(item);\r\n          setSearchReasult(filteredList,kindList)\r\n       }\r\n        \r\n    });\r\n\r\n    console.log(filteredList);\r\n}\r\n   \r\n    return (\r\n      <div className=\"conversation-search\">\r\n        <input\r\n          type=\"search\" onChange={(e)=>{search(e.target.value)}}\r\n          className=\"conversation-search-input\"\r\n          placeholder=\"Search Messages\"\r\n        />\r\n      </div>\r\n    );\r\n})","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\ConversationListItem\\index.js",["158","159","160","161","162","163","164","165","166","167","168"],"C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\MessageList\\index.js",["169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport Compose from '../Compose';\r\nimport Toolbar from '../Toolbar';\r\n\r\nimport $ from 'jquery';\r\nimport ToolbarButton from '../ToolbarButton';\r\nimport Message from '../Message';\r\nimport moment from 'moment';\r\nimport { connect } from 'react-redux';\r\nimport './MessageList.css';\r\nimport { actions } from '../../redux/Actions/actions'\r\nimport ContactList from '../ContactList/index'\r\nimport ConversationSearch from '../ConversationSearch/index'\r\nimport io from \"socket.io-client\";\r\nimport MembersList from '../MembersList/index';\r\nimport NewHangout from '../NewHangout/index';\r\nimport { Icon, InlineIcon } from '@iconify/react';\r\nimport accountMultiplePlus from '@iconify-icons/mdi/account-multiple-plus';\r\nimport Compose2 from '../Compose2';\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    userName: state.userReducer.userName,\r\n    stateConversation: state.hangoutReducer.listConvesation,\r\n    showContactList: state.contactsReducer.showContactList,\r\n    showMembersList: state.hangoutReducer.showMembersList,\r\n    messageInput: state.hangoutReducer.messageInput,\r\n    showNewHangout: state.hangoutReducer.showNewHangout,\r\n    showMessagesList: state.hangoutReducer.showMessagesList,\r\n    filteredMessages: state.filteredListReducer.filteredMessages,\r\n    listConvesation: state.hangoutReducer.listConvesation\r\n    //  filteredContacts:state.filteredContacts\r\n  }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setCurrentConversation: (conversation) => dispatch(actions.setConversation(conversation)),\r\n\r\n  SetMessageInput: (messageInput) =>\r\n    dispatch(actions.setMessageInput(messageInput)),\r\n  showMembers: () => dispatch(actions.setShow(\"members\")),\r\n  addNewWave: (wave) => dispatch(actions.addNewWave(wave))\r\n\r\n\r\n\r\n})\r\nconst MY_USER_ID = 'apple';\r\nexport default connect(mapStateToProps, mapDispatchToProps)(function MessageList(props) {\r\n\r\n  const ENDPOINT = 'https://socket.chat.leader.codes';\r\n  const messages = props.filteredMessages;\r\n  const messagesEndRef = useRef(null)\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView()\r\n  }\r\n\r\n  useEffect(() => {\r\n    scrollToBottom()\r\n  }, [messages]);\r\n\r\n\r\n  const { showMessagesList, showNewHangout, stateConversation, setCurrentConversation, showContactList, showContact, showMembersList, showMembers } = props;\r\n\r\n  let socket;\r\n  // let list;\r\n  // let kindList;\r\n  const [messages2, setMessages] = useState([])\r\n  const [showMyComponent, setShowMyComponent] = useState(false)\r\n\r\n  const [name, setName] = useState('');\r\n  const [room, setRoom] = useState('');\r\n  const [users, setUsers] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  // $('.emojiButton').click(function(){\r\n  //   debugger;\r\n  //   console.log(\"emoji\");\r\n  // })\r\n  useEffect(() => {\r\n\r\n    //     const name = \"mindy\"\r\n    //     const room = 210\r\n    //     socket = io(ENDPOINT, { transports: ['websocket'] });\r\n    //     socket.emit('user', name, room);\r\n    //     socket.on('chat_message', message => {\r\n    //       $(\".compose-input\").val(\"helllo\")\r\n    //       console.log(\"emitt\");\r\n    //       setMessages(msgs => [...msgs, message]);\r\n    //     });\r\n\r\n    //     socket.on(\"roomData\", ({ users }) => {\r\n    //       setUsers(users);\r\n    //     });\r\n    //   }, []);\r\n    // =======\r\n\r\n  }, [props.listConvesation])\r\n  // useEffect(() => {\r\n  //   const name = \"mindy\"\r\n  //   const room = 210\r\n  //   socket = io(ENDPOINT,{transports:['websocket']});\r\n  //   socket.emit('user', name, room);\r\n  //   socket.on('chat_message', message => {\r\n  //     $(\".compose-input\").val(\"helllo\")\r\n  //     console.log(\"emitt\");\r\n  //     setMessages(msgs => [...msgs, message]);\r\n  //   });\r\n\r\n  //   socket.on(\"roomData\", ({ users }) => {\r\n  //   setUsers(users);\r\n  //   });\r\n  // }, []);\r\n\r\n  const sendMessage = (event) => {\r\n    const wave = {\r\n      body: props.messageInput,\r\n      from: props.userName\r\n    }\r\n    event.preventDefault();\r\n    console.log(socket);\r\n    console.log(\"message to send\" + props.messageInput);\r\n    if (props.messageInput) {\r\n      debugger\r\n      props.addNewWave(wave)\r\n      props.SetMessageInput(\"\")\r\n      // socket.emit('chat_message', props.messageInput);\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  const renderMessages = () => {\r\n    console.log(\"messages\", messages);\r\n    let i = 0;\r\n    let messageCount = messages.length;\r\n    let tempMessages = [];\r\n\r\n    while (i < messageCount) {\r\n      if (messages[i].body) {\r\n        let previous = messages[i - 1];\r\n        let current = messages[i];\r\n        let next = messages[i + 1];\r\n\r\n        let currentMoment = moment(current.timestamp);\r\n        let prevBySameAuthor = false;\r\n        let nextBySameAuthor = false;\r\n        let startsSequence = true;\r\n        let endsSequence = true;\r\n        let showTimestamp = true;\r\n\r\n        if (previous) {\r\n          let previousMoment = moment(previous.timestamp);\r\n          let previousDuration = moment.duration(currentMoment.diff(previousMoment));\r\n\r\n\r\n          if (previousDuration.as('hours') < 1) {\r\n            startsSequence = false;\r\n          }\r\n\r\n          if (previousDuration.as('hours') < 1) {\r\n            showTimestamp = false;\r\n          }\r\n        }\r\n\r\n        if (next) {\r\n          let nextMoment = moment(next.timestamp);\r\n          let nextDuration = moment.duration(nextMoment.diff(currentMoment));\r\n          nextBySameAuthor = next.author === current.author;\r\n\r\n          if (nextBySameAuthor && nextDuration.as('hours') < 1) {\r\n            endsSequence = false;\r\n          }\r\n        }\r\n        tempMessages.push(\r\n\r\n          <Message\r\n            // messages={messages}\r\n            //  name={name} \r\n            key={i}\r\n\r\n            startsSequence={startsSequence}\r\n            endsSequence={endsSequence}\r\n            showTimestamp={showTimestamp}\r\n            data={current}\r\n          />\r\n        );\r\n      }\r\n\r\n      i += 1;\r\n\r\n    }\r\n\r\n    return tempMessages;\r\n  }\r\n\r\n  function h() {\r\n    showMembers()\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"message-list\">\r\n      {showMessagesList || showMembersList || showContactList ? <Toolbar\r\n        title={showMessagesList ? \"Conversation Title\" : \"\"}\r\n        rightItems={[\r\n          // {/* <ToolbarButton key=\"123e\" icon=\"ion-ios-person-add-sharp\" /> */}\r\n\r\n          // {/* <span class=\"iconify\" data-icon=\"ion:person-add-sharp\" data-inline=\"false\"></span> */}\r\n\r\n          <>  <Icon key=\"pop\" className=\"tool\" icon={accountMultiplePlus} onClick={h} />\r\n\r\n            <ToolbarButton key=\"video\" icon=\"ion-ios-videocam\" />\r\n            <ToolbarButton key=\"phone\" icon=\"ion-ios-call\" />\r\n          </>\r\n\r\n\r\n        ]}\r\n      /> : ''}\r\n\r\n\r\n      <div className=\"message-list-container\">\r\n\r\n        {showMessagesList ? <ConversationSearch list={stateConversation} kindList=\"filteredMessages\" /> : ''}\r\n        {showMessagesList ? renderMessages() : ''}\r\n        {showMembersList ? <MembersList /> : ''}\r\n        {showContactList ? <ContactList /> : ''}\r\n        {showNewHangout ? <NewHangout /> : ''}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n\r\n      {showMessagesList ? <Compose2 rightItems={[\r\n        <button className=\"sendButton\" onClick={(e) => sendMessage(e)}><div><i className=\"fa fa-paper-plane\" /></div></button>,\r\n        <ToolbarButton key=\"photo\" icon=\"ion-ios-camera\" />,\r\n        <ToolbarButton key=\"image\" icon=\"ion-ios-image\" />,\r\n        <ToolbarButton key=\"audio\" icon=\"ion-ios-mic\" />,\r\n        <ToolbarButton key=\"money\" icon=\"ion-ios-card\" />,\r\n        <ToolbarButton key=\"games\" icon=\"ion-logo-game-controller-b\" />,\r\n        // <ToolbarButton key=\"emoji\" icon=\"ion-ios-happy\" />\r\n      ]} /> : ''}\r\n\r\n    </div>\r\n  );\r\n})\r\n","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\ConversationList\\index.js",["190","191","192","193","194","195","196","197"],"import React, { useState, useEffect } from 'react';\r\nimport ConversationSearch from '../ConversationSearch';\r\nimport ConversationListItem from '../ConversationListItem';\r\nimport Toolbar from '../Toolbar';\r\nimport ToolbarButton from '../ToolbarButton';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux'\r\nimport { actions } from '../../redux/Actions/actions'\r\n\r\nimport './ConversationList.css';\r\nimport ContactList from '../ContactList';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        hangouts: state.hangoutReducer.hangouts,\r\n        filteredHangouts: state.filteredListReducer.filteredHangouts\r\n\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setCurrentConversation: (_id) => dispatch(actions.getHangoutById(_id)\r\n        , dispatch(actions.setShow(\"messages\"))),\r\n    setHangoutID: (_id) => dispatch(actions.setCurrentHangout(_id)),\r\n\r\n\r\n    NewHanghout: () => dispatch(actions.setShow(\"newHangout\"))\r\n\r\n\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(function ConversationList(props) {\r\n    const { setCurrentConversation, NewHanghout, hangouts, setHangoutID } = props;\r\n    const conversations = props.hangouts;\r\n    const filteredHangouts = props.filteredHangouts;\r\n\r\n    const getConversations = () => {\r\n        axios.get('https://randomuser.me/api/?results=20').then(response => {\r\n            let newConversations = response.data.results.map(result => {\r\n                return {\r\n                    photo: result.picture.large,\r\n                    name: `${result.name.first} ${result.name.last}`,\r\n                    text: 'Hello world! This is a long message that needs to be truncated.'\r\n                };\r\n            });\r\n        });\r\n    }\r\n\r\n    return (<div className=\"conversation-list\" >\r\n        <Toolbar title=\"Messenger\"\r\n            leftItems={\r\n                [<ToolbarButton key=\"cog\"\r\n                    icon=\"ion-ios-cog\" />\r\n                ]\r\n            }\r\n            rightItems={\r\n                [<ToolbarButton key=\"add\"\r\n                    icon=\"ion-ios-add-circle-outline\" onClick={NewHanghout} />\r\n                ]\r\n            }\r\n        /> <ConversationSearch list={hangouts} kindList=\"filteredHangouts\" />\r\n        {\r\n            filteredHangouts && filteredHangouts.length > 0 ?\r\n                filteredHangouts.map(conversation =>\r\n                    <div >\r\n\r\n                        <ConversationListItem key={conversation._id} className=\"color\"\r\n                            data={conversation} onClick={setHangoutID, setCurrentConversation}\r\n                        /></div>\r\n                ) : <div className=\"no-result\">No results found</div>\r\n        }\r\n\r\n    </div>\r\n    );\r\n})","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\MembersList\\index.js",["198","199","200","201"],"import React, { useState, useEffect } from 'react';\r\nimport ConversationListItem from '../ConversationListItem';\r\nimport { actions } from '../../redux/Actions/actions'\r\nimport { connect } from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport ConversationSearch from '../ConversationSearch/index'\r\n\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        members: state.hangoutReducer.members,\r\n        showContactList: state.contactsReducer.showContactList,\r\n        filteredMembers: state.filteredListReducer.filteredMembers,\r\n        manager: state.hangoutReducer.manager,\r\n        owner: state.hangoutReducer.owner,\r\n        managersList: state.hangoutReducer.managersList,\r\n        hangoutId: state.hangoutReducer.hangout\r\n    }\r\n\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n}));\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n    setShowContactList: () => dispatch(actions.setShow(\"contacts\")),\r\n    deleteHangout: (hangoutId) => dispatch(actions.deleteHangout(hangoutId))\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(function MembersList(props) {\r\n    const { members, setShowContactList, deleteHangout, filteredMembers, owner, manager, managersList, hangoutId } = props;\r\n    const classes = useStyles();\r\n    return (\r\n        <div className=\"conversation-list\" >\r\n\r\n            <ConversationSearch list={members} kindList=\"filteredMembers\" />\r\n\r\n            {\r\n                filteredMembers.map(member =>\r\n\r\n                    <ConversationListItem key={member._id}\r\n                        data={member}\r\n                        showButton={true}\r\n                        isManager={managersList.includes(member._id)}\r\n\r\n                    />\r\n                )\r\n            }\r\n\r\n            <div className={classes.root}>\r\n\r\n                {(owner == true || manager == true) && <Button variant=\"contained\" color=\"primary\" onClick={() => { setShowContactList() }}>ADD CONTACT!</Button>}\r\n                {owner && <Button variant=\"contained\" color=\"primary\" onClick={(e) => deleteHangout(hangoutId)}>delete channel</Button>}\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    );\r\n})","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\NewHangout\\index.js",["202","203","204","205","206","207","208","209"],"import React, { useState, useEffect } from 'react';\r\nimport UploadImage from '../UploadImage'\r\nimport ConversationListItem from '../ConversationListItem';\r\nimport { actions } from '../../redux/Actions/actions'\r\nimport { connect } from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport ConversationSearch from '../ConversationSearch/index'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport $ from 'jquery';\r\nimport './NewHangout.css';\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        contacts: state.contactsReducer.contacts,\r\n        members: state.hangoutReducer.members,\r\n        filteredContacts: state.filteredListReducer.filteredContacts,\r\n        userName: state.userReducer.userName,\r\n        uid: state.userReducer.uid,\r\n        jwtFromCookie: state.userReducer.jwt\r\n\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n}));\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//     root: {\r\n//         '& > *': {\r\n//             margin: theme.spacing(1),\r\n//         },\r\n//     },\r\n// }));\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    returnUsersId: (hangout) => dispatch(actions.returnUsersId(hangout)),\r\n    AddContactsToHangout: (AddContacts) => dispatch(actions.addContactsToHangout(AddContacts)),\r\n    setShow: () => dispatch(actions.setShow(\"newHangout\"))\r\n    //  setShowContactList: () => dispatch(actions.setShowContactList()),\r\n    // setFilteredContacts:()=> dispatch(actions.setShowContactList())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(function NewHangout(props) {\r\n\r\n    const { jwtFromCookie, uid, setShow, contacts, returnUsersId, AddContactsToHangout, members, setShowContactList, filteredContacts, userName } = props;\r\n    console.log(\"*****\", contacts);\r\n    const classes = useStyles();\r\n    var [AddContacts, setAddContacts] = useState([]);\r\n    var [groupName, setGroupName] = useState('');\r\n    var [img, setImg] = useState('');\r\n    // var [con, setCon] = useState([]);\r\n    // setShowContactList\r\n\r\n    const onChangeHandlerProfile = (event) => {\r\n\r\n        const reader = new FileReader();\r\n        const file = event;\r\n        reader.onloadend = () => {\r\n            setImg(reader.result);\r\n\r\n        };\r\n        reader.readAsDataURL(file);\r\n\r\n        console.log(\"event\", event)\r\n        var fileToUpload = event\r\n\r\n        var myFile = new FormData();\r\n        myFile.append(\"file\", fileToUpload);\r\n        $.ajax({\r\n            \"url\": 'https://chat.leader.codes/api/' + uid + '/uploadImageForHangout',\r\n            \"method\": \"POST\",\r\n            \"processData\": false,\r\n            \"mimeType\": \"multipart/form-data\",\r\n            \"contentType\": false,\r\n            \"headers\": {\r\n\r\n                \"Authorization\": jwtFromCookie\r\n\r\n            },\r\n            \"data\": myFile,\r\n            \"async\": false,\r\n            success: function (data1) {\r\n                console.log(\"success\")\r\n                console.log(data1);\r\n                setTimeout(function () { console.log(\"after setTimeOut\"); setImg(data1) }, 2000);\r\n            },\r\n            error: function (err) {\r\n                console.log(err)\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const addContactsToList = function (contact) {\r\n\r\n        if (AddContacts.includes(contact)) {\r\n            setAddContacts(AddContacts = AddContacts.filter(x => x !== contact));\r\n        }\r\n        else\r\n            setAddContacts(AddContacts = AddContacts.concat(contact));\r\n\r\n        console.log(\"AddContacts\", AddContacts)\r\n    }\r\n    const clearList = function () {\r\n        if (AddContacts.length > 0 && groupName != '') {\r\n            // var hangout = { members: AddContacts, name: groupName, owner: userName }\r\n            setAddContacts([]);\r\n            var hangout = { members: AddContacts, name: groupName, profileGroup: img, owner: userName }\r\n            returnUsersId(hangout);\r\n            setShow();\r\n\r\n        }\r\n        // AddContactsToHangout(AddContacts);\r\n        // setShowContactList();\r\n    }\r\n    console.log(\"contact-contactList\", contacts);\r\n    return (\r\n        <div className=\"conversation-search\" >\r\n            <ConversationSearch list={contacts} kindList=\"filteredContacts\" />\r\n\r\n            <form className={classes.root} noValidate autoComplete=\"off\" style={{\r\n                display: 'flex',\r\n                alignItems: 'center'\r\n\r\n            }}>\r\n                <TextField id=\"outlined-basic\" label=\"Fill Group Name\" variant=\"outlined\" onChange={e => { setGroupName(e.target.value) }} /> <label for=\"profileImg\">\r\n                    <img className=\"img_person conversation-photo\" referrerpolicy=\"no-referrer\" src={img} /></label>\r\n                <input\r\n                    type={\"file\"}\r\n                    id=\"profileImg\"\r\n                    htmlFor=\"myInput\"\r\n                    accept=\"image/*\"\r\n                    style={{\r\n                        display: 'none',\r\n                        cursor: 'pointer',\r\n                        float: 'right'\r\n                        //   width:'5px',\r\n                    }}\r\n                    onChange={(e) => onChangeHandlerProfile(e.target.files[0])}\r\n                /></form>\r\n\r\n\r\n            {\r\n                AddContacts ? AddContacts.map((item, index) => (\r\n                    console.log(\"item\", item.email),\r\n                    <> {item.email} , </>\r\n                )) : 'null'\r\n            }\r\n            {/* <UploadImage/> */}\r\n\r\n            {/* <input type=\"file\" name=\"\" id=\"\"/> */}\r\n\r\n            {\r\n                filteredContacts.map(contact =>\r\n                    <ConversationListItem key={contact._id}\r\n                        data={contact}\r\n                        onClick={() => addContactsToList(contact)\r\n                        }\r\n                        AddContacts={AddContacts}\r\n                    />\r\n                )\r\n            }\r\n\r\n            <div className={classes.root}><Button variant=\"contained\" color=\"primary\" onClick={() => { clearList() }}>Create New Group</Button></div>\r\n        </div >\r\n\r\n    );\r\n});","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\ToolbarButton\\index.js",[],"C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\Toolbar\\index.js",[],"C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\Compose\\index.js",[],"C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\Message\\index.js",["210","211","212","213","214","215","216","217","218","219"],"\r\nimport React, { useEffect, useState } from 'react';\r\nimport moment from 'moment';\r\n\r\nimport './Message.css';\r\nimport { connect } from 'react-redux';\r\nimport { actions } from '../../redux/Actions/actions'\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    stateConversation: state.hangoutReducer.listConvesation,\r\n    userName: state.userReducer.userName,\r\n    listConvesation: state.hangoutReducer.listConvesation\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setCurrentConversation: (conversation) =>\r\n    dispatch(actions.setConversation(conversation)),\r\n  getUsernameReturnEmail: (username) => dispatch(actions.getUsernameReturnEmail(username))\r\n\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(function Message(props) {\r\n  // useEffect(() => {\r\n  // debugger;\r\n  // },[props.listConvesation])\r\n  const { getUsernameReturnEmail, stateConversation, userName, setCurrentConversation } = props;\r\n  const {\r\n    data,\r\n    isMine,\r\n    startsSequence,\r\n    endsSequence,\r\n    showTimestamp,\r\n    name\r\n  } = props;\r\n  const friendlyTimestamp = moment(data.timestamp).format('LLLL');\r\n  async function func() {\r\n    var contactEmail = await getUsernameReturnEmail(data.from);\r\n    window.location = `https://contacts.leader.codes/${userName}?c=\"${contactEmail}\"`\r\n\r\n\r\n  }\r\n\r\n\r\n  if (userName != data.from) {\r\n    return (\r\n      <div className={['message'].join(' ')}>\r\n        {\r\n          showTimestamp &&\r\n          <div className=\"timestamp\">\r\n            {friendlyTimestamp}\r\n          </div>\r\n        }\r\n        <div className=\"bubble-container\">\r\n          <div className=\"bubble\" title={friendlyTimestamp}>\r\n            {data.body}\r\n\r\n          </div>\r\n          {/* <p class=\"sentText pr-10\">{name}</p> */}\r\n        </div>\r\n        {/* `https://contacts.leader.codes/${userName}` */}\r\n        <a href=\"#\" onClick={(e) => { func(); return false; }} class=\"active\">\r\n\r\n          <div class=\"from2\" >{data.from}</div> </a>\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n  else {\r\n    return (\r\n      <div className={[\r\n        'message', 'mine', 'start'\r\n\r\n      ].join(' ')}>\r\n        {\r\n          showTimestamp &&\r\n          <div className=\"timestamp\">\r\n            {friendlyTimestamp}\r\n          </div>\r\n        }\r\n        <div >\r\n          <div className=\"bubble-container\">\r\n            <div className=\"bubble\" title={friendlyTimestamp}>\r\n              {data.body}\r\n              {/* <div  class=\"from\" >{data.from}</div>  */}\r\n\r\n            </div>\r\n\r\n            {/* <div>{data.from}</div>   */}\r\n\r\n          </div>\r\n          {/* <a href=\"#\"onClick={(e)=>{func(); return false;}} class=\"active\">\r\n\r\n            <div class=\"from\" >{data.from}</div> </a> */}\r\n\r\n          <div class=\"from\" >ME</div>\r\n\r\n        </div>\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n})","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\UploadImage\\index.js",["220"],"\r\nimport React from 'react';\r\nimport ImageUploader from 'react-images-upload';\r\n\r\nexport default class UploadImage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { pictures: [] };\r\n        this.onDrop = this.onDrop.bind(this);\r\n    }\r\n\r\n    onDrop(pictureFiles, pictureDataURLs) {\r\n        console.log(pictureFiles);\r\n        this.setState({\r\n            pictures: pictureFiles\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (<>\r\n            <ImageUploader\r\n                withIcon={true}\r\n                buttonText='Choose images'\r\n                onChange={this.onDrop}\r\n                imgExtension={['.jpg', '.gif', '.png', '.gif']}\r\n                maxFileSize={5242880}\r\n            />\r\n            <img src={this.state.hangoutReducer.pictures[0]} />\r\n        </>\r\n\r\n        );\r\n    }\r\n}",["221","222"],"C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\Compose2\\index.js",["223","224","225","226","227","228","229","230","231","232","233"],"C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\socket.js",[],"C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\redux\\Stores\\Reducers\\User.js",[],"C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\redux\\Stores\\Reducers\\FilteredLists.js",["234","235","236","237","238"],"import produce from 'immer'\r\nimport createReducer from './ReducerUtils'\r\n\r\nconst initalStaste = {\r\n    filteredContacts: [],\r\n    filteredAddContacts: [],\r\n    filteredMessages: [],\r\n    filteredMembers: [],\r\n    filteredHangouts: []\r\n}\r\n\r\nconst filteredList = {\r\n    setFilteredList(state, action) {\r\n        if (action.payload.kindList == \"filteredContacts\")\r\n            state.filteredContacts = action.payload.list;\r\n        else if (action.payload.kindList == \"filteredHangouts\")\r\n            state.filteredHangouts = action.payload.list;\r\n        else if (action.payload.kindList == \"filteredMessages\")\r\n            state.filteredMessages = action.payload.list;\r\n        else if (action.payload.kindList == \"filteredMembers\")\r\n            state.filteredMembers = action.payload.list;\r\n        else if (action.payload.kindList == \"filteredAddContacts\")\r\n            state.filteredAddContacts = action.payload.list;\r\n    }\r\n}\r\n\r\nexport default produce((state, action) => createReducer(state, action, filteredList), initalStaste);\r\n","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\redux\\Stores\\Reducers\\Hangout.js",["239","240","241"],"C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\redux\\Stores\\Reducers\\Contact.js",["242"],"import produce from 'immer'\r\nimport createReducer from './ReducerUtils'\r\n\r\nconst initalStaste = {\r\n    hangoutsContacts: [],\r\n    contacts: [],\r\n    showContactList: false\r\n}\r\n\r\nconst contacts = {\r\n    setHangoutsContacts(state, action) {\r\n        state.hangoutsContacts = action.payload;\r\n    },\r\n    setContacts(state, action) {\r\n        state.contacts = action.payload;\r\n    },\r\n    setShowContactList(state, action) {\r\n        if (action.payload != undefined)\r\n            state.showContactList = action.payload;\r\n        else\r\n            state.showContactList = !state.showContactList;\r\n    }\r\n}\r\n\r\nexport default produce((state, action) => createReducer(state, action, contacts), initalStaste);\r\n\r\n","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\redux\\Stores\\Reducers\\ReducerUtils.js",[],{"ruleId":"243","replacedBy":"244"},{"ruleId":"245","replacedBy":"246"},{"ruleId":"247","severity":1,"message":"248","line":2,"column":8,"nodeType":"249","messageId":"250","endLine":2,"endColumn":19},{"ruleId":"247","severity":1,"message":"251","line":1,"column":27,"nodeType":"249","messageId":"250","endLine":1,"endColumn":36},{"ruleId":"247","severity":1,"message":"252","line":34,"column":44,"nodeType":"249","messageId":"250","endLine":34,"endColumn":64},{"ruleId":"247","severity":1,"message":"253","line":34,"column":66,"nodeType":"249","messageId":"250","endLine":34,"endColumn":73},{"ruleId":"247","severity":1,"message":"254","line":37,"column":10,"nodeType":"249","messageId":"250","endLine":37,"endColumn":13},{"ruleId":"247","severity":1,"message":"255","line":37,"column":15,"nodeType":"249","messageId":"250","endLine":37,"endColumn":21},{"ruleId":"256","severity":1,"message":"257","line":59,"column":48,"nodeType":"258","messageId":"259","endLine":59,"endColumn":49},{"ruleId":"260","severity":1,"message":"261","line":220,"column":27,"nodeType":"262","messageId":"263","endLine":220,"endColumn":29},{"ruleId":"260","severity":1,"message":"261","line":7,"column":28,"nodeType":"262","messageId":"263","endLine":7,"endColumn":30},{"ruleId":"260","severity":1,"message":"261","line":9,"column":60,"nodeType":"262","messageId":"263","endLine":9,"endColumn":62},{"ruleId":"260","severity":1,"message":"261","line":11,"column":58,"nodeType":"262","messageId":"263","endLine":11,"endColumn":60},{"ruleId":"260","severity":1,"message":"261","line":13,"column":59,"nodeType":"262","messageId":"263","endLine":13,"endColumn":61},{"ruleId":"260","severity":1,"message":"261","line":16,"column":33,"nodeType":"262","messageId":"263","endLine":16,"endColumn":35},{"ruleId":"260","severity":1,"message":"261","line":17,"column":59,"nodeType":"262","messageId":"263","endLine":17,"endColumn":61},{"ruleId":"260","severity":1,"message":"261","line":20,"column":65,"nodeType":"262","messageId":"263","endLine":20,"endColumn":67},{"ruleId":"260","severity":1,"message":"261","line":25,"column":60,"nodeType":"262","messageId":"263","endLine":25,"endColumn":62},{"ruleId":"260","severity":1,"message":"261","line":27,"column":58,"nodeType":"262","messageId":"263","endLine":27,"endColumn":60},{"ruleId":"260","severity":1,"message":"261","line":32,"column":33,"nodeType":"262","messageId":"263","endLine":32,"endColumn":35},{"ruleId":"260","severity":1,"message":"261","line":34,"column":60,"nodeType":"262","messageId":"263","endLine":34,"endColumn":62},{"ruleId":"260","severity":1,"message":"261","line":36,"column":59,"nodeType":"262","messageId":"263","endLine":36,"endColumn":61},{"ruleId":"260","severity":1,"message":"261","line":38,"column":58,"nodeType":"262","messageId":"263","endLine":38,"endColumn":60},{"ruleId":"260","severity":1,"message":"261","line":41,"column":33,"nodeType":"262","messageId":"263","endLine":41,"endColumn":35},{"ruleId":"260","severity":1,"message":"261","line":42,"column":58,"nodeType":"262","messageId":"263","endLine":42,"endColumn":60},{"ruleId":"260","severity":1,"message":"261","line":45,"column":65,"nodeType":"262","messageId":"263","endLine":45,"endColumn":67},{"ruleId":"260","severity":1,"message":"261","line":49,"column":60,"nodeType":"262","messageId":"263","endLine":49,"endColumn":62},{"ruleId":"260","severity":1,"message":"261","line":51,"column":59,"nodeType":"262","messageId":"263","endLine":51,"endColumn":61},{"ruleId":"260","severity":1,"message":"264","line":28,"column":13,"nodeType":"262","messageId":"263","endLine":28,"endColumn":15},{"ruleId":"260","severity":1,"message":"261","line":52,"column":21,"nodeType":"262","messageId":"263","endLine":52,"endColumn":23},{"ruleId":"260","severity":1,"message":"264","line":52,"column":55,"nodeType":"262","messageId":"263","endLine":52,"endColumn":57},{"ruleId":"260","severity":1,"message":"261","line":56,"column":21,"nodeType":"262","messageId":"263","endLine":56,"endColumn":23},{"ruleId":"260","severity":1,"message":"264","line":56,"column":55,"nodeType":"262","messageId":"263","endLine":56,"endColumn":57},{"ruleId":"260","severity":1,"message":"264","line":60,"column":27,"nodeType":"262","messageId":"263","endLine":60,"endColumn":29},{"ruleId":"247","severity":1,"message":"251","line":1,"column":17,"nodeType":"249","messageId":"250","endLine":1,"endColumn":26},{"ruleId":"247","severity":1,"message":"265","line":4,"column":10,"nodeType":"249","messageId":"250","endLine":4,"endColumn":14},{"ruleId":"247","severity":1,"message":"266","line":4,"column":16,"nodeType":"249","messageId":"250","endLine":4,"endColumn":26},{"ruleId":"247","severity":1,"message":"267","line":5,"column":8,"nodeType":"249","messageId":"250","endLine":5,"endColumn":27},{"ruleId":"247","severity":1,"message":"268","line":9,"column":10,"nodeType":"249","messageId":"250","endLine":9,"endColumn":18},{"ruleId":"247","severity":1,"message":"269","line":9,"column":20,"nodeType":"249","messageId":"250","endLine":9,"endColumn":23},{"ruleId":"247","severity":1,"message":"270","line":39,"column":11,"nodeType":"249","messageId":"250","endLine":39,"endColumn":28},{"ruleId":"247","severity":1,"message":"271","line":40,"column":5,"nodeType":"249","messageId":"250","endLine":40,"endColumn":27},{"ruleId":"247","severity":1,"message":"272","line":41,"column":5,"nodeType":"249","messageId":"250","endLine":41,"endColumn":16},{"ruleId":"247","severity":1,"message":"273","line":45,"column":5,"nodeType":"249","messageId":"250","endLine":45,"endColumn":16},{"ruleId":"247","severity":1,"message":"274","line":48,"column":5,"nodeType":"249","messageId":"250","endLine":48,"endColumn":12},{"ruleId":"247","severity":1,"message":"275","line":2,"column":8,"nodeType":"249","messageId":"250","endLine":2,"endColumn":15},{"ruleId":"247","severity":1,"message":"276","line":5,"column":8,"nodeType":"249","messageId":"250","endLine":5,"endColumn":9},{"ruleId":"247","severity":1,"message":"277","line":14,"column":8,"nodeType":"249","messageId":"250","endLine":14,"endColumn":10},{"ruleId":"247","severity":1,"message":"266","line":17,"column":16,"nodeType":"249","messageId":"250","endLine":17,"endColumn":26},{"ruleId":"247","severity":1,"message":"278","line":47,"column":7,"nodeType":"249","messageId":"250","endLine":47,"endColumn":17},{"ruleId":"247","severity":1,"message":"279","line":50,"column":9,"nodeType":"249","messageId":"250","endLine":50,"endColumn":17},{"ruleId":"247","severity":1,"message":"271","line":62,"column":64,"nodeType":"249","messageId":"250","endLine":62,"endColumn":86},{"ruleId":"247","severity":1,"message":"280","line":62,"column":105,"nodeType":"249","messageId":"250","endLine":62,"endColumn":116},{"ruleId":"247","severity":1,"message":"281","line":67,"column":10,"nodeType":"249","messageId":"250","endLine":67,"endColumn":19},{"ruleId":"247","severity":1,"message":"282","line":67,"column":21,"nodeType":"249","messageId":"250","endLine":67,"endColumn":32},{"ruleId":"247","severity":1,"message":"283","line":68,"column":10,"nodeType":"249","messageId":"250","endLine":68,"endColumn":25},{"ruleId":"247","severity":1,"message":"284","line":68,"column":27,"nodeType":"249","messageId":"250","endLine":68,"endColumn":45},{"ruleId":"247","severity":1,"message":"285","line":70,"column":10,"nodeType":"249","messageId":"250","endLine":70,"endColumn":14},{"ruleId":"247","severity":1,"message":"286","line":70,"column":16,"nodeType":"249","messageId":"250","endLine":70,"endColumn":23},{"ruleId":"247","severity":1,"message":"287","line":71,"column":10,"nodeType":"249","messageId":"250","endLine":71,"endColumn":14},{"ruleId":"247","severity":1,"message":"288","line":71,"column":16,"nodeType":"249","messageId":"250","endLine":71,"endColumn":23},{"ruleId":"247","severity":1,"message":"289","line":72,"column":10,"nodeType":"249","messageId":"250","endLine":72,"endColumn":15},{"ruleId":"247","severity":1,"message":"290","line":72,"column":17,"nodeType":"249","messageId":"250","endLine":72,"endColumn":25},{"ruleId":"247","severity":1,"message":"291","line":73,"column":10,"nodeType":"249","messageId":"250","endLine":73,"endColumn":17},{"ruleId":"247","severity":1,"message":"292","line":73,"column":19,"nodeType":"249","messageId":"250","endLine":73,"endColumn":29},{"ruleId":"247","severity":1,"message":"293","line":148,"column":13,"nodeType":"249","messageId":"250","endLine":148,"endColumn":29},{"ruleId":"247","severity":1,"message":"294","line":1,"column":17,"nodeType":"249","messageId":"250","endLine":1,"endColumn":25},{"ruleId":"247","severity":1,"message":"251","line":1,"column":27,"nodeType":"249","messageId":"250","endLine":1,"endColumn":36},{"ruleId":"247","severity":1,"message":"248","line":11,"column":8,"nodeType":"249","messageId":"250","endLine":11,"endColumn":19},{"ruleId":"247","severity":1,"message":"269","line":12,"column":10,"nodeType":"249","messageId":"250","endLine":12,"endColumn":13},{"ruleId":"247","severity":1,"message":"295","line":34,"column":11,"nodeType":"249","messageId":"250","endLine":34,"endColumn":24},{"ruleId":"247","severity":1,"message":"296","line":37,"column":11,"nodeType":"249","messageId":"250","endLine":37,"endColumn":27},{"ruleId":"247","severity":1,"message":"297","line":39,"column":17,"nodeType":"249","messageId":"250","endLine":39,"endColumn":33},{"ruleId":"256","severity":1,"message":"257","line":68,"column":70,"nodeType":"258","messageId":"259","endLine":68,"endColumn":71},{"ruleId":"247","severity":1,"message":"294","line":1,"column":17,"nodeType":"249","messageId":"250","endLine":1,"endColumn":25},{"ruleId":"247","severity":1,"message":"251","line":1,"column":27,"nodeType":"249","messageId":"250","endLine":1,"endColumn":36},{"ruleId":"260","severity":1,"message":"261","line":57,"column":25,"nodeType":"262","messageId":"263","endLine":57,"endColumn":27},{"ruleId":"260","severity":1,"message":"261","line":57,"column":44,"nodeType":"262","messageId":"263","endLine":57,"endColumn":46},{"ruleId":"247","severity":1,"message":"251","line":1,"column":27,"nodeType":"249","messageId":"250","endLine":1,"endColumn":36},{"ruleId":"247","severity":1,"message":"298","line":2,"column":8,"nodeType":"249","messageId":"250","endLine":2,"endColumn":19},{"ruleId":"247","severity":1,"message":"252","line":52,"column":67,"nodeType":"249","messageId":"250","endLine":52,"endColumn":87},{"ruleId":"247","severity":1,"message":"253","line":52,"column":89,"nodeType":"249","messageId":"250","endLine":52,"endColumn":96},{"ruleId":"247","severity":1,"message":"299","line":52,"column":98,"nodeType":"249","messageId":"250","endLine":52,"endColumn":116},{"ruleId":"260","severity":1,"message":"264","line":117,"column":49,"nodeType":"262","messageId":"263","endLine":117,"endColumn":51},{"ruleId":"300","severity":1,"message":"301","line":139,"column":21,"nodeType":"302","endLine":139,"endColumn":109},{"ruleId":"256","severity":1,"message":"257","line":157,"column":52,"nodeType":"258","messageId":"259","endLine":157,"endColumn":53},{"ruleId":"247","severity":1,"message":"251","line":2,"column":17,"nodeType":"249","messageId":"250","endLine":2,"endColumn":26},{"ruleId":"247","severity":1,"message":"294","line":2,"column":28,"nodeType":"249","messageId":"250","endLine":2,"endColumn":36},{"ruleId":"247","severity":1,"message":"270","line":28,"column":35,"nodeType":"249","messageId":"250","endLine":28,"endColumn":52},{"ruleId":"247","severity":1,"message":"271","line":28,"column":64,"nodeType":"249","messageId":"250","endLine":28,"endColumn":86},{"ruleId":"247","severity":1,"message":"303","line":31,"column":5,"nodeType":"249","messageId":"250","endLine":31,"endColumn":11},{"ruleId":"247","severity":1,"message":"304","line":32,"column":5,"nodeType":"249","messageId":"250","endLine":32,"endColumn":19},{"ruleId":"247","severity":1,"message":"305","line":33,"column":5,"nodeType":"249","messageId":"250","endLine":33,"endColumn":17},{"ruleId":"247","severity":1,"message":"285","line":35,"column":5,"nodeType":"249","messageId":"250","endLine":35,"endColumn":9},{"ruleId":"260","severity":1,"message":"264","line":46,"column":16,"nodeType":"262","messageId":"263","endLine":46,"endColumn":18},{"ruleId":"306","severity":1,"message":"307","line":63,"column":9,"nodeType":"302","endLine":63,"endColumn":79},{"ruleId":"300","severity":1,"message":"301","line":29,"column":13,"nodeType":"302","endLine":29,"endColumn":64},{"ruleId":"243","replacedBy":"308"},{"ruleId":"245","replacedBy":"309"},{"ruleId":"247","severity":1,"message":"310","line":1,"column":38,"nodeType":"249","messageId":"250","endLine":1,"endColumn":44},{"ruleId":"247","severity":1,"message":"311","line":1,"column":46,"nodeType":"249","messageId":"250","endLine":1,"endColumn":55},{"ruleId":"247","severity":1,"message":"276","line":3,"column":8,"nodeType":"249","messageId":"250","endLine":3,"endColumn":9},{"ruleId":"247","severity":1,"message":"312","line":5,"column":8,"nodeType":"249","messageId":"250","endLine":5,"endColumn":18},{"ruleId":"247","severity":1,"message":"313","line":7,"column":8,"nodeType":"249","messageId":"250","endLine":7,"endColumn":22},{"ruleId":"247","severity":1,"message":"314","line":10,"column":10,"nodeType":"249","messageId":"250","endLine":10,"endColumn":16},{"ruleId":"247","severity":1,"message":"315","line":34,"column":49,"nodeType":"249","messageId":"250","endLine":34,"endColumn":68},{"ruleId":"316","severity":1,"message":"317","line":51,"column":8,"nodeType":"318","endLine":51,"endColumn":21},{"ruleId":"316","severity":1,"message":"319","line":51,"column":8,"nodeType":"318","endLine":51,"endColumn":21,"suggestions":"320"},{"ruleId":"316","severity":1,"message":"321","line":124,"column":8,"nodeType":"322","endLine":124,"endColumn":10,"suggestions":"323"},{"ruleId":"247","severity":1,"message":"324","line":140,"column":14,"nodeType":"249","messageId":"250","endLine":140,"endColumn":21},{"ruleId":"260","severity":1,"message":"261","line":14,"column":37,"nodeType":"262","messageId":"263","endLine":14,"endColumn":39},{"ruleId":"260","severity":1,"message":"261","line":16,"column":42,"nodeType":"262","messageId":"263","endLine":16,"endColumn":44},{"ruleId":"260","severity":1,"message":"261","line":18,"column":42,"nodeType":"262","messageId":"263","endLine":18,"endColumn":44},{"ruleId":"260","severity":1,"message":"261","line":20,"column":42,"nodeType":"262","messageId":"263","endLine":20,"endColumn":44},{"ruleId":"260","severity":1,"message":"261","line":22,"column":42,"nodeType":"262","messageId":"263","endLine":22,"endColumn":44},{"ruleId":"260","severity":1,"message":"264","line":41,"column":28,"nodeType":"262","messageId":"263","endLine":41,"endColumn":30},{"ruleId":"260","severity":1,"message":"264","line":47,"column":28,"nodeType":"262","messageId":"263","endLine":47,"endColumn":30},{"ruleId":"260","severity":1,"message":"264","line":53,"column":28,"nodeType":"262","messageId":"263","endLine":53,"endColumn":30},{"ruleId":"260","severity":1,"message":"264","line":18,"column":28,"nodeType":"262","messageId":"263","endLine":18,"endColumn":30},"no-native-reassign",["325"],"no-negated-in-lhs",["326"],"no-unused-vars","'ContactList' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'AddContactsToHangout' is assigned a value but never used.","'members' is assigned a value but never used.","'con' is assigned a value but never used.","'setCon' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'Icon' is defined but never used.","'InlineIcon' is defined but never used.","'accountMultiplePlus' is defined but never used.","'blueGrey' is defined but never used.","'red' is defined but never used.","'stateConversation' is assigned a value but never used.","'setCurrentConversation' is assigned a value but never used.","'AddContacts' is assigned a value but never used.","'showMembers' is assigned a value but never used.","'manager' is assigned a value but never used.","'Compose' is defined but never used.","'$' is defined but never used.","'io' is defined but never used.","'MY_USER_ID' is assigned a value but never used.","'ENDPOINT' is assigned a value but never used.","'showContact' is assigned a value but never used.","'messages2' is assigned a value but never used.","'setMessages' is assigned a value but never used.","'showMyComponent' is assigned a value but never used.","'setShowMyComponent' is assigned a value but never used.","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","'room' is assigned a value but never used.","'setRoom' is assigned a value but never used.","'users' is assigned a value but never used.","'setUsers' is assigned a value but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'prevBySameAuthor' is assigned a value but never used.","'useState' is defined but never used.","'conversations' is assigned a value but never used.","'getConversations' is assigned a value but never used.","'newConversations' is assigned a value but never used.","'UploadImage' is defined but never used.","'setShowContactList' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'isMine' is assigned a value but never used.","'startsSequence' is assigned a value but never used.","'endsSequence' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["325"],["326"],"'useRef' is defined but never used.","'Component' is defined but never used.","'InputEmoji' is defined but never used.","'socketIOClient' is defined but never used.","'render' is defined but never used.","'getCurrentHangoutID' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","MemberExpression","React Hook useEffect has missing dependencies: 'props.hangout' and 'props.userName'. Either include them or remove the dependency array.",["327"],"React Hook useEffect has a missing dependency: 'addWaveLocal'. Either include it or remove the dependency array.","ArrayExpression",["328"],"'onEnter' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},"Update the dependencies array to be: [props.hangout, props.userName]",{"range":"333","text":"334"},"Update the dependencies array to be: [addWaveLocal]",{"range":"335","text":"336"},[1728,1741],"[props.hangout, props.userName]",[4114,4116],"[addWaveLocal]"]