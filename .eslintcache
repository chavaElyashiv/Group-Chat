[{"C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\index.js":"1","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\serviceWorker.js":"2","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\App\\index.js":"3","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\redux\\Stores\\store.js":"4","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\Messenger\\index.js":"5","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\ContactList\\index.js":"6","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\redux\\MiddleWares\\conversation.js":"7","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\redux\\MiddleWares\\contact.js":"8","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\redux\\Actions\\actions.js":"9","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\ConversationSearch\\index.js":"10","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\ConversationListItem\\index.js":"11","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\MessageList\\index.js":"12","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\ConversationList\\index.js":"13","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\MembersList\\index.js":"14","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\NewHangout\\index.js":"15","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\ToolbarButton\\index.js":"16","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\Toolbar\\index.js":"17","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\Compose\\index.js":"18","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\Message\\index.js":"19","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\UploadImage\\index.js":"20","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\socket.js":"21","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\redux\\Stores\\Reducers\\User.js":"22","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\redux\\Stores\\Reducers\\FilteredLists.js":"23","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\redux\\Stores\\Reducers\\Hangout.js":"24","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\redux\\Stores\\Reducers\\Contact.js":"25","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\redux\\Stores\\Reducers\\ReducerUtils.js":"26"},{"size":826,"mtime":1611752719443,"results":"27","hashOfConfig":"28"},{"size":5083,"mtime":1608022793617,"results":"29","hashOfConfig":"28"},{"size":305,"mtime":1612878035019,"results":"30","hashOfConfig":"28"},{"size":1446,"mtime":1612876251450,"results":"31","hashOfConfig":"28"},{"size":1146,"mtime":1611145918525,"results":"32","hashOfConfig":"28"},{"size":2709,"mtime":1612952848203,"results":"33","hashOfConfig":"28"},{"size":12615,"mtime":1613042816966,"results":"34","hashOfConfig":"28"},{"size":7363,"mtime":1613039716047,"results":"35","hashOfConfig":"28"},{"size":717,"mtime":1612183334788,"results":"36","hashOfConfig":"28"},{"size":2450,"mtime":1612962374157,"results":"37","hashOfConfig":"28"},{"size":4452,"mtime":1612878035022,"results":"38","hashOfConfig":"28"},{"size":7683,"mtime":1612948010659,"results":"39","hashOfConfig":"28"},{"size":2749,"mtime":1612962870581,"results":"40","hashOfConfig":"28"},{"size":2294,"mtime":1612954412555,"results":"41","hashOfConfig":"28"},{"size":6207,"mtime":1612183334783,"results":"42","hashOfConfig":"28"},{"size":251,"mtime":1608199786533,"results":"43","hashOfConfig":"28"},{"size":390,"mtime":1606999432516,"results":"44","hashOfConfig":"28"},{"size":5697,"mtime":1612947972897,"results":"45","hashOfConfig":"28"},{"size":2794,"mtime":1612947158558,"results":"46","hashOfConfig":"28"},{"size":854,"mtime":1612183334785,"results":"47","hashOfConfig":"28"},{"size":214,"mtime":1612878035026,"results":"48","hashOfConfig":"28"},{"size":465,"mtime":1612183334794,"results":"49","hashOfConfig":"28"},{"size":1123,"mtime":1612963085329,"results":"50","hashOfConfig":"28"},{"size":2460,"mtime":1613042151152,"results":"51","hashOfConfig":"28"},{"size":705,"mtime":1612183334789,"results":"52","hashOfConfig":"28"},{"size":334,"mtime":1612183334793,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"k628pm",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"56"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"56"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\index.js",[],["120","121"],"C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\serviceWorker.js",[],"C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\App\\index.js",[],"C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\redux\\Stores\\store.js",[],"C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\Messenger\\index.js",["122"],"import React from 'react';\r\nimport ContactList from '../ContactList';\r\nimport ConversationList from '../ConversationList';\r\nimport MessageList from '../MessageList';\r\nimport './Messenger.css';\r\n\r\nexport default function Messenger(props) {\r\n  return (\r\n    <div className=\"messenger\">\r\n      {/* <Toolbar\r\n          title=\"Messenger\"\r\n          leftItems={[\r\n            <ToolbarButton key=\"cog\" icon=\"ion-ios-cog\" />\r\n          ]}\r\n          rightItems={[\r\n            <ToolbarButton key=\"add\" icon=\"ion-ios-add-circle-outline\" />\r\n          ]}\r\n        /> */}\r\n\r\n      {/* <Toolbar\r\n          title=\"Conversation Title\"\r\n          rightItems={[\r\n            <ToolbarButton key=\"info\" icon=\"ion-ios-information-circle-outline\" />,\r\n            <ToolbarButton key=\"video\" icon=\"ion-ios-videocam\" />,\r\n            <ToolbarButton key=\"phone\" icon=\"ion-ios-call\" />\r\n          ]}\r\n        /> */}\r\n\r\n      <div className=\"scrollable sidebar\">\r\n        <ConversationList />\r\n\r\n      </div>\r\n\r\n      <div className=\"scrollable content\">\r\n\r\n        <MessageList />\r\n      </div>\r\n      {/* <div maxwidth=\"mm\"><ContactList/></div> */}\r\n    </div>\r\n  );\r\n}","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\ContactList\\index.js",["123","124","125","126","127"],"import React, { useState, useEffect } from 'react';\r\nimport ConversationListItem from '../ConversationListItem';\r\nimport { actions } from '../../redux/Actions/actions'\r\nimport { connect } from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport ConversationSearch from '../ConversationSearch/index'\r\n\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        contacts: state.contactsReducer.hangoutsContacts,\r\n        members: state.hangoutReducer.members,\r\n        filteredAddContacts: state.filteredListReducer.filteredAddContacts\r\n    }\r\n\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n}));\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n    AddContactsToHangout: (AddContacts) =>\r\n        dispatch(actions.addContactsToHangout(AddContacts)),\r\n    setShowContactList: () => dispatch(actions.setShow(\"members\"))\r\n\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(function ContactList(props) {\r\n    const { filteredAddContacts, contacts, AddContactsToHangout, members, setShowContactList } = props;\r\n    const classes = useStyles();\r\n    var [AddContacts, setAddContacts] = useState([]);\r\n    var [con, setCon] = useState([]);\r\n\r\n    function addNewContacts() {\r\n        AddContactsToHangout(AddContacts)\r\n        setShowContactList()\r\n\r\n    }\r\n    const addContactsToList = function (contact) {\r\n\r\n        if (AddContacts.includes(contact)) {\r\n            setAddContacts(AddContacts = AddContacts.filter(x => x !== contact));\r\n        }\r\n\r\n        else\r\n            setAddContacts(AddContacts = AddContacts.concat(contact));\r\n\r\n\r\n        console.log(\"AddContacts\", AddContacts)\r\n\r\n    }\r\n\r\n    console.log(\"contact-contactList\", contacts);\r\n    return (\r\n        <div className=\"conversation-list\" >\r\n            <ConversationSearch list={contacts} kindList=\"filteredAddContacts\" />\r\n\r\n            {AddContacts ? AddContacts.map((item, index) => (\r\n                console.log(\"item\", item.email),\r\n                <> {item.email} , </>\r\n            )) : 'null'}\r\n\r\n            {\r\n                filteredAddContacts.map(contact =>\r\n                    <ConversationListItem key={contact._id}\r\n                        data={contact}\r\n                        onClick={() => addContactsToList(contact)\r\n                        }\r\n                        AddContacts={AddContacts}\r\n                    />\r\n                )\r\n            }\r\n\r\n            <div className={classes.root}><Button variant=\"contained\" color=\"primary\" onClick={() => { addNewContacts() }}>ADD CONTACTS</Button></div>\r\n        </div>\r\n\r\n    );\r\n})","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\redux\\MiddleWares\\conversation.js",["128"],"C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\redux\\MiddleWares\\contact.js",["129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146"],"C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\redux\\Actions\\actions.js",[],"C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\ConversationSearch\\index.js",["147","148","149","150","151","152"],"import React from 'react';\r\nimport './ConversationSearch.css';\r\nimport { connect } from 'react-redux'\r\nimport { actions } from '../../redux/Actions/actions'\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    // hangouts: state.hangouts,\r\n    // filteredList: state.filteredList\r\n  }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setSearchReasult: (list, kindList) => dispatch(actions.setFilteredList({ list, kindList }))\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(function ConversationSearch(props) {\r\n  const conversations = props.list;\r\n  const { setSearchReasult, kindList } = props\r\n  let filteredList = props.list;\r\n  console.log(\"l;l;\", props.list);\r\n\r\n  filteredList = conversations;\r\n  //setSearchReasult(filteredList, kindList);\r\n  function search(eve) {\r\n    debugger\r\n\r\n    if (eve != \"\") {\r\n      console.log(eve);\r\n      searchConversations(eve)\r\n    } else {\r\n      console.log(\"press somthing \");\r\n\r\n      filteredList = conversations\r\n      // if(kindList==\"filteredHangouts\")\r\n      setSearchReasult(filteredList, kindList)\r\n    }\r\n  }\r\n\r\n  function searchConversations(searchText) {\r\n\r\n    filteredList = [];\r\n\r\n    //if(kindList==\"filteredHangouts\")\r\n    // setSearchReasult(filteredList, kindList)\r\n\r\n    // filteredList = []\r\n    conversations.forEach(item => {\r\n      //   \"kindList==\"filteredHangouts\" && \"\r\n\r\n      //if the subject contains the searchTxt\r\n      if (kindList == \"filteredMessages\" && item.body != undefined && item.body.toLowerCase().indexOf(searchText) > -1) {\r\n        filteredList.push(item);\r\n        // setSearchReasult(filteredList, kindList)\r\n      }\r\n      if (kindList == \"filteredMembers\" && item.email != undefined && item.email.toLowerCase().indexOf(searchText) > -1) {\r\n        debugger\r\n        filteredList.push(item);\r\n        //  setSearchReasult(filteredList, kindList)\r\n      }\r\n      else if (item.name != undefined && item.name.toLowerCase().indexOf(searchText) > -1) {\r\n        console.log(item.name);\r\n        filteredList.push(item);\r\n        // setSearchReasult(filteredList, kindList)\r\n      }\r\n\r\n    });\r\n    setSearchReasult(filteredList, kindList)\r\n\r\n\r\n    console.log(filteredList);\r\n  }\r\n\r\n  return (\r\n    <div className=\"conversation-search\">\r\n      <input\r\n        type=\"search\" onChange={(e) => { search(e.target.value) }}\r\n        className=\"conversation-search-input\"\r\n        placeholder=\"Search Messages\"\r\n      />\r\n    </div>\r\n  );\r\n})","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\ConversationListItem\\index.js",["153","154","155","156","157","158","159","160","161","162","163"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Overlay } from 'react-bootstrap';\r\nimport { Icon, InlineIcon } from '@iconify/react';\r\nimport accountMultiplePlus from '@iconify-icons/mdi/account-multiple-plus';\r\nimport './ConversationListItem.css';\r\nimport { connect } from 'react-redux'\r\nimport { actions } from '../../redux/Actions/actions'\r\nimport { blueGrey, red } from '@material-ui/core/colors';\r\nimport Button1 from '@material-ui/core/Button';\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    stateConversation: state.hangoutReducer.listConvesation,\r\n    owner: state.hangoutReducer.owner,\r\n    manager: state.hangoutReducer.manager,\r\n    showMembers: state.hangoutReducer.showMembersList,\r\n    // showNewHangout: state.hangoutReducer.showNewHangout\r\n  }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n  GivePermission: (_id) =>\r\n    dispatch(actions.getManagerPermission(_id)),\r\n  removeMember: (_id) => dispatch(actions.removeMemberByManager(_id), dispatch(actions.getManagerPermission(_id))),\r\n  exitHangout: () => dispatch(actions.exitHangout())\r\n})\r\n\r\n//   setCurrentConversation:(_id)=>\r\n//   dispatch(actions.getHangoutById(_id),  dispatch(actions.setShowContactList(false))), \r\n\r\n// })\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(function ConversationListItem(props) {\r\n  const [show, setShow] = useState(false);\r\n  const target = useRef(null);\r\n  const { stateConversation,\r\n    setCurrentConversation,\r\n    AddContacts,\r\n    GivePermission,\r\n    removeMember,\r\n    exitHangout,\r\n    showMembers,\r\n    // showNewHangout,\r\n    owner,\r\n    manager,\r\n    showButton,\r\n    isManager } = props;\r\n\r\n  const getConversations = props.onClick;\r\n  // const conversationsEndRef = useRef(null)\r\n  // const scrollToBottom = () => {\r\n  //   conversationsEndRef.current?.scrollIntoView()\r\n  // }\r\n\r\n  // useEffect(() => {\r\n  //   scrollToBottom()\r\n  // }, [showNewHangout]);\r\n\r\n  function contactList(_id) {\r\n    getConversations(_id);\r\n  }\r\n  console.log(\"getConversations\", getConversations);\r\n\r\n  const { _id, profileGroup, name, text, email, thumbnail } = props.data;\r\n  return (\r\n    <div className=\"conversation-list-item\" onClick={(e) => getConversations ? contactList(_id) : console.log(getConversations)} >\r\n      {/* Group-Chat\\src\\images */}\r\n      {/* C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\images */}\r\n      {profileGroup && <img className=\"conversation-photo\" src={require(\"../../images/\" + profileGroup)} alt=\"conversation\" />}\r\n      {thumbnail && <img className=\"conversation-photo\" src={require(\"../../images/\" + thumbnail)} alt=\"conversation\" />}\r\n\r\n      <div className=\"conversation-info\">\r\n        <h1 className=\"conversation-title\">{name}</h1>\r\n        <p className=\"conversation-snippet\">{text}</p>\r\n        <p className=\"conversation-snippet\">{email}</p>\r\n\r\n\r\n      </div>\r\n      {owner && showButton && <Button1 variant=\"contained\" color=\"primary\" onClick={(e) => GivePermission(_id)}> {isManager ? \"remove permission\" : \"Manager permission\"}</Button1>}\r\n      {owner && showButton && <Button1 variant=\"contained\" color=\"primary\" onClick={(e) => removeMember(_id)}>remove member</Button1>}\r\n\r\n      <>\r\n\r\n        {!showButton && <Button variant=\"danger\" ref={target} style={{\r\n          border: 'none',\r\n          background: 'none'\r\n        }} onClick={() => setShow(!show)}>\r\n\r\n          <i className=\"la la-ellipsis-v\" />\r\n          <div>\r\n            <i variant=\"danger\" ref={target} onClick={() => setShow(!show)} className=\"fa fa-ellipsis-v\" />\r\n          </div>\r\n        </Button>}\r\n\r\n        <Overlay target={target.current} show={show} placement=\"right\">\r\n          {({ placement, arrowProps, show: _show, popper, ...props }) => (\r\n            <div\r\n              {...props}\r\n              style={{\r\n                backgroundColor: '#ffff',\r\n                padding: '2px 10px',\r\n                color: 'black',\r\n                borderRadius: 3,\r\n                ...props.style,\r\n              }}\r\n            >\r\n              <option className=\"option\" value=\"\">delete</option>\r\n              <option className=\"option\" value=\"\" onClick={(e) => exitHangout()} >exit</option>\r\n              <option className=\"option\" value=\"\">archive</option>\r\n\r\n            </div>\r\n          )}\r\n        </Overlay>\r\n      </>\r\n      {/* {!showButton && <div ref={conversationsEndRef} />} */}\r\n    </div>\r\n  );\r\n\r\n})","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\MessageList\\index.js",["164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport Compose from '../Compose';\r\nimport Toolbar from '../Toolbar';\r\n\r\nimport $ from 'jquery';\r\nimport ToolbarButton from '../ToolbarButton';\r\nimport Message from '../Message';\r\nimport moment from 'moment';\r\nimport { connect } from 'react-redux';\r\nimport './MessageList.css';\r\nimport { actions } from '../../redux/Actions/actions'\r\nimport ContactList from '../ContactList/index'\r\nimport ConversationSearch from '../ConversationSearch/index'\r\nimport io from \"socket.io-client\";\r\nimport MembersList from '../MembersList/index';\r\nimport NewHangout from '../NewHangout/index';\r\nimport { Icon, InlineIcon } from '@iconify/react';\r\nimport accountMultiplePlus from '@iconify-icons/mdi/account-multiple-plus';\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    userName: state.userReducer.userName,\r\n    stateConversation: state.hangoutReducer.listConvesation,\r\n    showContactList: state.contactsReducer.showContactList,\r\n    showMembersList: state.hangoutReducer.showMembersList,\r\n    messageInput: state.hangoutReducer.messageInput,\r\n    showNewHangout: state.hangoutReducer.showNewHangout,\r\n    showMessagesList: state.hangoutReducer.showMessagesList,\r\n    filteredMessages: state.filteredListReducer.filteredMessages,\r\n    listConvesation: state.hangoutReducer.listConvesation\r\n    //  filteredContacts:state.filteredContacts\r\n  }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setCurrentConversation: (conversation) => dispatch(actions.setConversation(conversation)),\r\n\r\n  SetMessageInput: (messageInput) =>\r\n    dispatch(actions.setMessageInput(messageInput)),\r\n  showMembers: () => dispatch(actions.setShow(\"members\")),\r\n  addNewWave: (wave) => dispatch(actions.addNewWave(wave))\r\n\r\n\r\n\r\n})\r\nconst MY_USER_ID = 'apple';\r\nexport default connect(mapStateToProps, mapDispatchToProps)(function MessageList(props) {\r\n\r\n  const ENDPOINT = 'https://socket.chat.leader.codes';\r\n  const messages = props.filteredMessages;\r\n  const messagesEndRef = useRef(null)\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView()\r\n  }\r\n\r\n  useEffect(() => {\r\n    scrollToBottom()\r\n  }, [messages]);\r\n\r\n\r\n  const { showMessagesList, showNewHangout, stateConversation, setCurrentConversation, showContactList, showContact, showMembersList, showMembers } = props;\r\n\r\n  let socket;\r\n  // let list;\r\n  // let kindList;\r\n  const [messages2, setMessages] = useState([])\r\n  const [showMyComponent, setShowMyComponent] = useState(false)\r\n\r\n  const [name, setName] = useState('');\r\n  const [room, setRoom] = useState('');\r\n  const [users, setUsers] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  // $('.emojiButton').click(function(){\r\n  //   debugger;\r\n  //   console.log(\"emoji\");\r\n  // })\r\n  useEffect(() => {\r\n\r\n    //     const name = \"mindy\"\r\n    //     const room = 210\r\n    //     socket = io(ENDPOINT, { transports: ['websocket'] });\r\n    //     socket.emit('user', name, room);\r\n    //     socket.on('chat_message', message => {\r\n    //       $(\".compose-input\").val(\"helllo\")\r\n    //       console.log(\"emitt\");\r\n    //       setMessages(msgs => [...msgs, message]);\r\n    //     });\r\n\r\n    //     socket.on(\"roomData\", ({ users }) => {\r\n    //       setUsers(users);\r\n    //     });\r\n    //   }, []);\r\n    // =======\r\n\r\n  }, [props.listConvesation])\r\n  // useEffect(() => {\r\n  //   const name = \"mindy\"\r\n  //   const room = 210\r\n  //   socket = io(ENDPOINT,{transports:['websocket']});\r\n  //   socket.emit('user', name, room);\r\n  //   socket.on('chat_message', message => {\r\n  //     $(\".compose-input\").val(\"helllo\")\r\n  //     console.log(\"emitt\");\r\n  //     setMessages(msgs => [...msgs, message]);\r\n  //   });\r\n\r\n  //   socket.on(\"roomData\", ({ users }) => {\r\n  //   setUsers(users);\r\n  //   });\r\n  // }, []);\r\n\r\n  const sendMessage = (event) => {\r\n    const wave = {\r\n      body: props.messageInput,\r\n      from: props.userName\r\n    }\r\n    event.preventDefault();\r\n    console.log(socket);\r\n    console.log(\"message to send\" + props.messageInput);\r\n    if (props.messageInput) {\r\n      debugger\r\n      props.addNewWave(wave)\r\n      props.SetMessageInput(\"\")\r\n      // socket.emit('chat_message', props.messageInput);\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  const renderMessages = () => {\r\n    console.log(\"messages\", messages);\r\n    let i = 0;\r\n    let messageCount = messages.length;\r\n    let tempMessages = [];\r\n\r\n    while (i < messageCount) {\r\n      if (messages[i].body) {\r\n        let previous = messages[i - 1];\r\n        let current = messages[i];\r\n        let next = messages[i + 1];\r\n\r\n        let currentMoment = moment(current.timestamp);\r\n        let prevBySameAuthor = false;\r\n        let nextBySameAuthor = false;\r\n        let startsSequence = true;\r\n        let endsSequence = true;\r\n        let showTimestamp = true;\r\n\r\n        if (previous) {\r\n          let previousMoment = moment(previous.timestamp);\r\n          let previousDuration = moment.duration(currentMoment.diff(previousMoment));\r\n\r\n\r\n          if (previousDuration.as('hours') < 1) {\r\n            startsSequence = false;\r\n          }\r\n\r\n          if (previousDuration.as('hours') < 1) {\r\n            showTimestamp = false;\r\n          }\r\n        }\r\n\r\n        if (next) {\r\n          let nextMoment = moment(next.timestamp);\r\n          let nextDuration = moment.duration(nextMoment.diff(currentMoment));\r\n          nextBySameAuthor = next.author === current.author;\r\n\r\n          if (nextBySameAuthor && nextDuration.as('hours') < 1) {\r\n            endsSequence = false;\r\n          }\r\n        }\r\n        tempMessages.push(\r\n\r\n          <Message\r\n            // messages={messages}\r\n            //  name={name} \r\n            key={i}\r\n\r\n            startsSequence={startsSequence}\r\n            endsSequence={endsSequence}\r\n            showTimestamp={showTimestamp}\r\n            data={current}\r\n          />\r\n        );\r\n      }\r\n\r\n      i += 1;\r\n\r\n    }\r\n\r\n    return tempMessages;\r\n  }\r\n\r\n  function h() {\r\n    showMembers()\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"message-list\">\r\n      {showMessagesList || showMembersList || showContactList ? <Toolbar\r\n        title={showMessagesList ? \"Conversation Title\" : \"\"}\r\n        rightItems={[\r\n          // {/* <ToolbarButton key=\"123e\" icon=\"ion-ios-person-add-sharp\" /> */}\r\n\r\n          // {/* <span class=\"iconify\" data-icon=\"ion:person-add-sharp\" data-inline=\"false\"></span> */}\r\n\r\n          <>  <Icon key=\"pop\" className=\"tool\" icon={accountMultiplePlus} onClick={h} />\r\n\r\n            <ToolbarButton key=\"video\" icon=\"ion-ios-videocam\" />\r\n            <ToolbarButton key=\"phone\" icon=\"ion-ios-call\" />\r\n          </>\r\n\r\n\r\n        ]}\r\n      /> : ''}\r\n\r\n\r\n      <div className=\"message-list-container\">\r\n\r\n        {showMessagesList ? <ConversationSearch list={stateConversation} kindList=\"filteredMessages\" /> : ''}\r\n        {showMessagesList ? renderMessages() : ''}\r\n        {showMembersList ? <MembersList /> : ''}\r\n        {showContactList ? <ContactList /> : ''}\r\n        {showNewHangout ? <NewHangout /> : ''}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n\r\n      {showMessagesList ? <Compose rightItems={[\r\n        <button className=\"sendButton\" onClick={(e) => sendMessage(e)}><div><i className=\"fa fa-paper-plane\" /></div></button>,\r\n        <ToolbarButton key=\"photo\" icon=\"ion-ios-camera\" />,\r\n        <ToolbarButton key=\"image\" icon=\"ion-ios-image\" />,\r\n        <ToolbarButton key=\"audio\" icon=\"ion-ios-mic\" />,\r\n        <ToolbarButton key=\"money\" icon=\"ion-ios-card\" />,\r\n        <ToolbarButton key=\"games\" icon=\"ion-logo-game-controller-b\" />,\r\n        // <ToolbarButton key=\"emoji\" icon=\"ion-ios-happy\" />\r\n      ]} /> : ''}\r\n\r\n    </div>\r\n  );\r\n})\r\n","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\ConversationList\\index.js",["184","185","186","187","188","189","190","191"],"import React, { useState, useEffect } from 'react';\r\nimport ConversationSearch from '../ConversationSearch';\r\nimport ConversationListItem from '../ConversationListItem';\r\nimport Toolbar from '../Toolbar';\r\nimport ToolbarButton from '../ToolbarButton';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux'\r\nimport { actions } from '../../redux/Actions/actions'\r\n\r\nimport './ConversationList.css';\r\nimport ContactList from '../ContactList';\r\nimport { red } from '@material-ui/core/colors';\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        hangouts: state.hangoutReducer.hangouts,\r\n        filteredHangouts: state.filteredListReducer.filteredHangouts\r\n\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setCurrentConversation: (_id) => dispatch(actions.getHangoutById(_id)\r\n        , dispatch(actions.setShow(\"messages\"))),\r\n    setHangoutID: (_id) => dispatch(actions.setCurrentHangout(_id)),\r\n\r\n\r\n    NewHanghout: () => dispatch(actions.setShow(\"newHangout\"))\r\n\r\n\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(function ConversationList(props) {\r\n    const { setCurrentConversation, NewHanghout, hangouts, setHangoutID } = props;\r\n    const conversations = props.hangouts;\r\n    const filteredHangouts = props.filteredHangouts;\r\n\r\n    const getConversations = () => {\r\n        axios.get('https://randomuser.me/api/?results=20').then(response => {\r\n            let newConversations = response.data.results.map(result => {\r\n                return {\r\n                    photo: result.picture.large,\r\n                    name: `${result.name.first} ${result.name.last}`,\r\n                    text: 'Hello world! This is a long message that needs to be truncated.'\r\n                };\r\n            });\r\n        });\r\n    }\r\n\r\n    return (<div className=\"conversation-list\" >\r\n        <Toolbar title=\"Messenger\"\r\n            leftItems={\r\n                [<ToolbarButton key=\"cog\"\r\n                    icon=\"ion-ios-cog\" />\r\n                ]\r\n            }\r\n            rightItems={\r\n                [<ToolbarButton key=\"add\"\r\n                    icon=\"ion-ios-add-circle-outline\" onClick={NewHanghout} />\r\n                ]\r\n            }\r\n        /> <ConversationSearch list={hangouts} kindList=\"filteredHangouts\" />\r\n        {\r\n            filteredHangouts && filteredHangouts.length > 0 ?\r\n                filteredHangouts.map(conversation =>\r\n                    <div >\r\n\r\n                        <ConversationListItem key={conversation._id} className=\"color\"\r\n                            data={conversation} onClick={setHangoutID, setCurrentConversation}\r\n                        /></div>\r\n                ) : <div className=\"no-result\">No results found</div>\r\n        }\r\n\r\n    </div>\r\n    );\r\n})","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\MembersList\\index.js",["192","193","194","195"],"import React, { useState, useEffect } from 'react';\r\nimport ConversationListItem from '../ConversationListItem';\r\nimport { actions } from '../../redux/Actions/actions'\r\nimport { connect } from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport ConversationSearch from '../ConversationSearch/index'\r\n\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        members: state.hangoutReducer.members,\r\n        showContactList: state.contactsReducer.showContactList,\r\n        filteredMembers: state.filteredListReducer.filteredMembers,\r\n        manager: state.hangoutReducer.manager,\r\n        owner: state.hangoutReducer.owner,\r\n        managersList: state.hangoutReducer.managersList,\r\n        hangoutId: state.hangoutReducer.hangout\r\n    }\r\n\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n}));\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n    setShowContactList: () => dispatch(actions.setShow(\"contacts\")),\r\n    deleteHangout: (hangoutId) => dispatch(actions.deleteHangout(hangoutId))\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(function MembersList(props) {\r\n    const { members, setShowContactList, deleteHangout, filteredMembers, owner, manager, managersList, hangoutId } = props;\r\n    const classes = useStyles();\r\n    return (\r\n        <div className=\"conversation-list\" >\r\n\r\n            <ConversationSearch list={members} kindList=\"filteredMembers\" />\r\n\r\n            {\r\n                filteredMembers.map(member =>\r\n\r\n                    <ConversationListItem key={member._id}\r\n                        data={member}\r\n                        showButton={true}\r\n                        isManager={managersList.includes(member._id)}\r\n\r\n                    />\r\n                )\r\n            }\r\n\r\n            <div className={classes.root}>\r\n\r\n                {(owner == true || manager == true) && <Button variant=\"contained\" color=\"primary\" onClick={() => { setShowContactList() }}>ADD CONTACT!</Button>}\r\n                {owner && <Button variant=\"contained\" color=\"primary\" onClick={(e) => deleteHangout(hangoutId)}>delete channel</Button>}\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    );\r\n})","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\NewHangout\\index.js",["196","197","198","199","200","201","202","203"],"import React, { useState, useEffect } from 'react';\r\nimport UploadImage from '../UploadImage'\r\nimport ConversationListItem from '../ConversationListItem';\r\nimport { actions } from '../../redux/Actions/actions'\r\nimport { connect } from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport ConversationSearch from '../ConversationSearch/index'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport $ from 'jquery';\r\nimport './NewHangout.css';\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        contacts: state.contactsReducer.contacts,\r\n        members: state.hangoutReducer.members,\r\n        filteredContacts: state.filteredListReducer.filteredContacts,\r\n        userName: state.userReducer.userName,\r\n        uid: state.userReducer.uid,\r\n        jwtFromCookie: state.userReducer.jwt\r\n\r\n    }\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '25ch',\r\n        },\r\n    },\r\n}));\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//     root: {\r\n//         '& > *': {\r\n//             margin: theme.spacing(1),\r\n//         },\r\n//     },\r\n// }));\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    returnUsersId: (hangout) => dispatch(actions.returnUsersId(hangout)),\r\n    AddContactsToHangout: (AddContacts) => dispatch(actions.addContactsToHangout(AddContacts)),\r\n    setShow: () => dispatch(actions.setShow(\"newHangout\"))\r\n    //  setShowContactList: () => dispatch(actions.setShowContactList()),\r\n    // setFilteredContacts:()=> dispatch(actions.setShowContactList())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(function NewHangout(props) {\r\n\r\n    const { jwtFromCookie, uid, setShow, contacts, returnUsersId, AddContactsToHangout, members, setShowContactList, filteredContacts, userName } = props;\r\n    console.log(\"*****\", contacts);\r\n    const classes = useStyles();\r\n    var [AddContacts, setAddContacts] = useState([]);\r\n    var [groupName, setGroupName] = useState('');\r\n    var [img, setImg] = useState('');\r\n    // var [con, setCon] = useState([]);\r\n    // setShowContactList\r\n\r\n    const onChangeHandlerProfile = (event) => {\r\n\r\n        const reader = new FileReader();\r\n        const file = event;\r\n        reader.onloadend = () => {\r\n            setImg(reader.result);\r\n\r\n        };\r\n        reader.readAsDataURL(file);\r\n\r\n        console.log(\"event\", event)\r\n        var fileToUpload = event\r\n\r\n        var myFile = new FormData();\r\n        myFile.append(\"file\", fileToUpload);\r\n        $.ajax({\r\n            \"url\": 'https://chat.leader.codes/api/' + uid + '/uploadImageForHangout',\r\n            \"method\": \"POST\",\r\n            \"processData\": false,\r\n            \"mimeType\": \"multipart/form-data\",\r\n            \"contentType\": false,\r\n            \"headers\": {\r\n\r\n                \"Authorization\": jwtFromCookie\r\n\r\n            },\r\n            \"data\": myFile,\r\n            \"async\": false,\r\n            success: function (data1) {\r\n                console.log(\"success\")\r\n                console.log(data1);\r\n                setTimeout(function () { console.log(\"after setTimeOut\"); setImg(data1) }, 2000);\r\n            },\r\n            error: function (err) {\r\n                console.log(err)\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const addContactsToList = function (contact) {\r\n\r\n        if (AddContacts.includes(contact)) {\r\n            setAddContacts(AddContacts = AddContacts.filter(x => x !== contact));\r\n        }\r\n        else\r\n            setAddContacts(AddContacts = AddContacts.concat(contact));\r\n\r\n        console.log(\"AddContacts\", AddContacts)\r\n    }\r\n    const clearList = function () {\r\n        if (AddContacts.length > 0 && groupName != '') {\r\n            // var hangout = { members: AddContacts, name: groupName, owner: userName }\r\n            setAddContacts([]);\r\n            var hangout = { members: AddContacts, name: groupName, profileGroup: img, owner: userName }\r\n            returnUsersId(hangout);\r\n            setShow();\r\n\r\n        }\r\n        // AddContactsToHangout(AddContacts);\r\n        // setShowContactList();\r\n    }\r\n    console.log(\"contact-contactList\", contacts);\r\n    return (\r\n        <div className=\"conversation-search\" >\r\n            <ConversationSearch list={contacts} kindList=\"filteredContacts\" />\r\n\r\n            <form className={classes.root} noValidate autoComplete=\"off\" style={{\r\n                display: 'flex',\r\n                alignItems: 'center'\r\n\r\n            }}>\r\n                <TextField id=\"outlined-basic\" label=\"Fill Group Name\" variant=\"outlined\" onChange={e => { setGroupName(e.target.value) }} /> <label for=\"profileImg\">\r\n                    <img className=\"img_person conversation-photo\" referrerpolicy=\"no-referrer\" src={img} /></label>\r\n                <input\r\n                    type={\"file\"}\r\n                    id=\"profileImg\"\r\n                    htmlFor=\"myInput\"\r\n                    accept=\"image/*\"\r\n                    style={{\r\n                        display: 'none',\r\n                        cursor: 'pointer',\r\n                        float: 'right'\r\n                        //   width:'5px',\r\n                    }}\r\n                    onChange={(e) => onChangeHandlerProfile(e.target.files[0])}\r\n                /></form>\r\n\r\n\r\n            {\r\n                AddContacts ? AddContacts.map((item, index) => (\r\n                    console.log(\"item\", item.email),\r\n                    <> {item.email} , </>\r\n                )) : 'null'\r\n            }\r\n            {/* <UploadImage/> */}\r\n\r\n            {/* <input type=\"file\" name=\"\" id=\"\"/> */}\r\n\r\n            {\r\n                filteredContacts.map(contact =>\r\n                    <ConversationListItem key={contact._id}\r\n                        data={contact}\r\n                        onClick={() => addContactsToList(contact)\r\n                        }\r\n                        AddContacts={AddContacts}\r\n                    />\r\n                )\r\n            }\r\n\r\n            <div className={classes.root}><Button variant=\"contained\" color=\"primary\" onClick={() => { clearList() }}>Create New Group</Button></div>\r\n        </div >\r\n\r\n    );\r\n});","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\ToolbarButton\\index.js",[],"C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\Toolbar\\index.js",[],"C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\Compose\\index.js",["204","205","206","207","208","209","210","211","212","213"],"import React, { useEffect, useState, useRef, Component } from 'react';\r\nimport './Compose.css';\r\nimport $ from 'jquery';\r\nimport { actions } from '../../redux/Actions/actions'\r\nimport InputEmoji from \"react-input-emoji\";\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport socketIOClient from \"socket.io-client\";\r\nimport { connect } from 'react-redux'\r\nimport { socketRef } from \"../../socket\";\r\nimport { render } from 'react-dom';\r\n\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        // messageInput: state.messageInput,\r\n        userName: state.userReducer.userName,\r\n        hangout: state.hangoutReducer.hangout\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    SetMessageInput: (messageInput) =>\r\n        dispatch(actions.setMessageInput(messageInput)),\r\n    addNewWave: (wave) => dispatch(actions.addNewWave(wave)),\r\n    addWaveLocal: (wave, hangout) => dispatch(actions.addWave({ wave: wave, hangout: hangout })),\r\n    //getCurrentHangoutID to handle it!!\r\n    getCurrentHangoutID: () => dispatch(actions.getCurrentHangoutID())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(function Compose(props) {\r\n    // const { hangout } = props;\r\n    const { addNewWave, addWaveLocal, userName, getCurrentHangoutID } = props;\r\n    const [message1, setMessage1] = useState(\"\");\r\n\r\n\r\n    // const SOCKET_SERVER_URL = \"https://socket.chat.leader.codes\"\r\n\r\n    // const socketRef = useRef();\r\n    // const socketRef = useRef(socketRef);\r\n\r\n    useEffect(() => {\r\n        debugger\r\n        socketRef.emit('user', props.userName, props.hangout, (response) => {\r\n            console.log(response.status); // ok\r\n        })\r\n\r\n        // socketRef.emit('connection', socketRef)\r\n\r\n    }, [props.hangout])\r\n    useEffect(() => {\r\n        socketRef.on('connect', (message) => {\r\n            debugger\r\n            console.log(\"someone connected\");\r\n            // var h = await getCurrentHangoutID();\r\n            // var h = props.hangout;\r\n            // // componentDidUpdate()\r\n            // console.log(\"props.hangout\", props.hangout);\r\n            // if (props.hangout != null) {\r\n            //     debugger\r\n            //     console.log(\"props.userName\", props.userName);\r\n            //     console.log(\"props.hangout\", props.hangout);\r\n            //     // socketRef.emit('user', props.userName, props.hangout)\r\n            //         socketRef.emit('user', props.userName, props.hangout)\r\n\r\n            //     //     console.log(\"message\", message);\r\n            // }\r\n\r\n        });\r\n\r\n        // componentDidUpdate(){\r\n        //     console.log(\"props.hangout\", props.hangout);\r\n\r\n        // }\r\n        // socketRef.current = socketIOClient(SOCKET_SERVER_URL, {\r\n        //     transports: ['websocket'],\r\n\r\n        // });\r\n        socketRef.on('message', (message, from, hangout) => {\r\n\r\n            debugger\r\n            //    if (hangout === props.hangout) {\r\n            let wave = {\r\n                body: message,\r\n                from: from\r\n            }\r\n            addWaveLocal(wave, hangout)\r\n            debugger\r\n\r\n            console.log(\"message\", message);\r\n            //    }\r\n\r\n\r\n\r\n\r\n            debugger\r\n\r\n        })\r\n        socketRef.on('is_online', (message) => {\r\n            console.log(\"is_online\", message);\r\n        })\r\n        // socketRef.on('connect', (message) => {\r\n        //     // componentDidUpdate()\r\n        //     console.log(\"props.hangout\", props.hangout);\r\n        //     if (props.hangout != null) {\r\n        //         debugger\r\n        //         console.log(\"props.userName\", props.userName);\r\n        //         console.log(\"props.hangout\", props.hangout);\r\n        //         // socketRef.emit('user', props.userName, props.hangout)\r\n        //         socketRef.emit('user', props.userName, props.hangout)\r\n\r\n        //         //     console.log(\"message\", message);\r\n        //     }\r\n        ////till here\r\n\r\n        // });\r\n        // socketRef.emit('user', props.userName, props.hangout)\r\n        socketRef.on('new member', (data) => {\r\n            console.log(\"new member\", data);\r\n\r\n        })\r\n\r\n    }, [])\r\n\r\n\r\n\r\n    function emitMessage(message) {\r\n        debugger\r\n\r\n        //   if (!socketRef.current || socketRef.current.readyState !== 1) return;\r\n        socketRef.emit('send_message', message, userName, props.hangout);\r\n        const wave = {\r\n            body: message,\r\n            from: userName\r\n        }\r\n        addNewWave(wave)\r\n\r\n    }\r\n    function onEnter(e) {\r\n        debugger\r\n        if (e.key === 'Enter') {\r\n            emitMessage(e.target.value);\r\n            //   setMessage1(e.target.value)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"compose\">\r\n\r\n            <input\r\n                className=\"compose-input\"\r\n                id=\"inputVal\"\r\n                type=\"text\"\r\n                // onEnter={(value) => handleOnChange(value)}\r\n                //  value={props.messageInput}\r\n                //   value={message}\r\n                //  onChange={setText, handleOnChange}\r\n                onChange={(e) => { setMessage1(e.target.value) }}\r\n                //   onEnter={(e) => { setMessage(e.target.value) }}\r\n                //cleanOnEnter\r\n                //  onKeyDown={(e) => { onEnter(e) }}\r\n                //    onChange={handleNewMessageChange}\r\n                placeholder=\"Write message...\"\r\n            // onEnter={sendMessage}\r\n            // placeholder=\"Type a message\"\r\n            />\r\n            {\r\n                props.rightItems\r\n            }\r\n            <button onClick={() => { emitMessage(message1) }} className=\"send-message-button\">\r\n                Send\r\n      </button>\r\n        </div>\r\n    );\r\n})\r\n\r\n\r\n\r\n\r\n","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\Message\\index.js",["214","215","216","217","218","219","220","221","222","223"],"\r\nimport React, { useEffect, useState } from 'react';\r\nimport moment from 'moment';\r\n\r\nimport './Message.css';\r\nimport { connect } from 'react-redux';\r\nimport { actions } from '../../redux/Actions/actions'\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    stateConversation: state.hangoutReducer.listConvesation,\r\n    userName: state.userReducer.userName,\r\n    listConvesation: state.hangoutReducer.listConvesation\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setCurrentConversation: (conversation) =>\r\n    dispatch(actions.setConversation(conversation)),\r\n  getUsernameReturnEmail: (username) => dispatch(actions.getUsernameReturnEmail(username))\r\n\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(function Message(props) {\r\n  // useEffect(() => {\r\n  // debugger;\r\n  // },[props.listConvesation])\r\n  const { getUsernameReturnEmail, stateConversation, userName, setCurrentConversation } = props;\r\n  const {\r\n    data,\r\n    isMine,\r\n    startsSequence,\r\n    endsSequence,\r\n    showTimestamp,\r\n    name\r\n  } = props;\r\n  const friendlyTimestamp = moment(data.timestamp).format('LLLL');\r\n  async function func() {\r\n    var contactEmail = await getUsernameReturnEmail(data.from);\r\n    window.location = `https://contacts.leader.codes/${userName}?c=\"${contactEmail}\"`\r\n\r\n\r\n  }\r\n\r\n\r\n  if (userName != data.from) {\r\n    return (\r\n      <div className={['message'].join(' ')}>\r\n        {\r\n          showTimestamp &&\r\n          <div className=\"timestamp\">\r\n            {friendlyTimestamp}\r\n          </div>\r\n        }\r\n        <div className=\"bubble-container\">\r\n          <div className=\"bubble\" title={friendlyTimestamp}>\r\n            {data.body}\r\n\r\n          </div>\r\n          {/* <p class=\"sentText pr-10\">{name}</p> */}\r\n        </div>\r\n        {/* `https://contacts.leader.codes/${userName}` */}\r\n        <a href=\"#\" onClick={(e) => { func(); return false; }} className=\"active\">\r\n\r\n          <div className=\"from2\" >{data.from}</div> </a>\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n  else {\r\n    return (\r\n      <div className={[\r\n        'message', 'mine', 'start'\r\n\r\n      ].join(' ')}>\r\n        {\r\n          showTimestamp &&\r\n          <div className=\"timestamp\">\r\n            {friendlyTimestamp}\r\n          </div>\r\n        }\r\n        <div >\r\n          <div className=\"bubble-container\">\r\n            <div className=\"bubble\" title={friendlyTimestamp}>\r\n              {data.body}\r\n              {/* <div  class=\"from\" >{data.from}</div>  */}\r\n\r\n            </div>\r\n\r\n            {/* <div>{data.from}</div>   */}\r\n\r\n          </div>\r\n          {/* <a href=\"#\"onClick={(e)=>{func(); return false;}} class=\"active\">\r\n\r\n            <div class=\"from\" >{data.from}</div> </a> */}\r\n\r\n          <div className=\"from\" >ME</div>\r\n\r\n        </div>\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n})","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\components\\UploadImage\\index.js",["224"],"\r\nimport React from 'react';\r\nimport ImageUploader from 'react-images-upload';\r\n\r\nexport default class UploadImage extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { pictures: [] };\r\n        this.onDrop = this.onDrop.bind(this);\r\n    }\r\n\r\n    onDrop(pictureFiles, pictureDataURLs) {\r\n        console.log(pictureFiles);\r\n        this.setState({\r\n            pictures: pictureFiles\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (<>\r\n            <ImageUploader\r\n                withIcon={true}\r\n                buttonText='Choose images'\r\n                onChange={this.onDrop}\r\n                imgExtension={['.jpg', '.gif', '.png', '.gif']}\r\n                maxFileSize={5242880}\r\n            />\r\n            <img src={this.state.hangoutReducer.pictures[0]} />\r\n        </>\r\n\r\n        );\r\n    }\r\n}","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\socket.js",[],"C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\redux\\Stores\\Reducers\\User.js",[],"C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\redux\\Stores\\Reducers\\FilteredLists.js",["225","226","227","228","229"],"import produce from 'immer'\r\nimport createReducer from './ReducerUtils'\r\n\r\nconst initalStaste = {\r\n    filteredContacts: [],\r\n    filteredAddContacts: [],\r\n    filteredMessages: [],\r\n    filteredMembers: [],\r\n    filteredHangouts: []\r\n}\r\n\r\nconst filteredList = {\r\n    setFilteredList(state, action) {\r\n        debugger\r\n        if (action.payload.kindList == \"filteredContacts\")\r\n            state.filteredContacts = action.payload.list;\r\n        else if (action.payload.kindList == \"filteredHangouts\") {\r\n            debugger\r\n            state.filteredHangouts = action.payload.list;\r\n        }\r\n        else if (action.payload.kindList == \"filteredMessages\")\r\n            state.filteredMessages = action.payload.list;\r\n        else if (action.payload.kindList == \"filteredMembers\") {\r\n            debugger\r\n            state.filteredMembers = action.payload.list;\r\n        }\r\n        else if (action.payload.kindList == \"filteredAddContacts\")\r\n            state.filteredAddContacts = action.payload.list;\r\n    }\r\n}\r\n\r\nexport default produce((state, action) => createReducer(state, action, filteredList), initalStaste);\r\n","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\redux\\Stores\\Reducers\\Hangout.js",["230","231","232"],"C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\redux\\Stores\\Reducers\\Contact.js",["233"],"import produce from 'immer'\r\nimport createReducer from './ReducerUtils'\r\n\r\nconst initalStaste = {\r\n    hangoutsContacts: [],\r\n    contacts: [],\r\n    showContactList: false\r\n}\r\n\r\nconst contacts = {\r\n    setHangoutsContacts(state, action) {\r\n        state.hangoutsContacts = action.payload;\r\n    },\r\n    setContacts(state, action) {\r\n        state.contacts = action.payload;\r\n    },\r\n    setShowContactList(state, action) {\r\n        if (action.payload != undefined)\r\n            state.showContactList = action.payload;\r\n        else\r\n            state.showContactList = !state.showContactList;\r\n    }\r\n}\r\n\r\nexport default produce((state, action) => createReducer(state, action, contacts), initalStaste);\r\n\r\n","C:\\Users\\User\\OneDrive\\Desktop\\Group Chat\\Group-Chat\\src\\redux\\Stores\\Reducers\\ReducerUtils.js",[],{"ruleId":"234","replacedBy":"235"},{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","severity":1,"message":"239","line":2,"column":8,"nodeType":"240","messageId":"241","endLine":2,"endColumn":19},{"ruleId":"238","severity":1,"message":"242","line":1,"column":27,"nodeType":"240","messageId":"241","endLine":1,"endColumn":36},{"ruleId":"238","severity":1,"message":"243","line":34,"column":66,"nodeType":"240","messageId":"241","endLine":34,"endColumn":73},{"ruleId":"238","severity":1,"message":"244","line":37,"column":10,"nodeType":"240","messageId":"241","endLine":37,"endColumn":13},{"ruleId":"238","severity":1,"message":"245","line":37,"column":15,"nodeType":"240","messageId":"241","endLine":37,"endColumn":21},{"ruleId":"246","severity":1,"message":"247","line":64,"column":48,"nodeType":"248","messageId":"249","endLine":64,"endColumn":49},{"ruleId":"250","severity":1,"message":"251","line":226,"column":27,"nodeType":"252","messageId":"253","endLine":226,"endColumn":29},{"ruleId":"250","severity":1,"message":"251","line":7,"column":28,"nodeType":"252","messageId":"253","endLine":7,"endColumn":30},{"ruleId":"250","severity":1,"message":"251","line":9,"column":60,"nodeType":"252","messageId":"253","endLine":9,"endColumn":62},{"ruleId":"250","severity":1,"message":"251","line":11,"column":58,"nodeType":"252","messageId":"253","endLine":11,"endColumn":60},{"ruleId":"250","severity":1,"message":"251","line":13,"column":59,"nodeType":"252","messageId":"253","endLine":13,"endColumn":61},{"ruleId":"250","severity":1,"message":"251","line":16,"column":33,"nodeType":"252","messageId":"253","endLine":16,"endColumn":35},{"ruleId":"250","severity":1,"message":"251","line":17,"column":59,"nodeType":"252","messageId":"253","endLine":17,"endColumn":61},{"ruleId":"250","severity":1,"message":"251","line":20,"column":65,"nodeType":"252","messageId":"253","endLine":20,"endColumn":67},{"ruleId":"250","severity":1,"message":"251","line":25,"column":60,"nodeType":"252","messageId":"253","endLine":25,"endColumn":62},{"ruleId":"250","severity":1,"message":"251","line":27,"column":58,"nodeType":"252","messageId":"253","endLine":27,"endColumn":60},{"ruleId":"250","severity":1,"message":"251","line":32,"column":33,"nodeType":"252","messageId":"253","endLine":32,"endColumn":35},{"ruleId":"250","severity":1,"message":"251","line":34,"column":60,"nodeType":"252","messageId":"253","endLine":34,"endColumn":62},{"ruleId":"250","severity":1,"message":"251","line":36,"column":59,"nodeType":"252","messageId":"253","endLine":36,"endColumn":61},{"ruleId":"250","severity":1,"message":"251","line":38,"column":58,"nodeType":"252","messageId":"253","endLine":38,"endColumn":60},{"ruleId":"250","severity":1,"message":"251","line":41,"column":33,"nodeType":"252","messageId":"253","endLine":41,"endColumn":35},{"ruleId":"250","severity":1,"message":"251","line":42,"column":58,"nodeType":"252","messageId":"253","endLine":42,"endColumn":60},{"ruleId":"250","severity":1,"message":"251","line":45,"column":65,"nodeType":"252","messageId":"253","endLine":45,"endColumn":67},{"ruleId":"250","severity":1,"message":"251","line":49,"column":60,"nodeType":"252","messageId":"253","endLine":49,"endColumn":62},{"ruleId":"250","severity":1,"message":"251","line":51,"column":59,"nodeType":"252","messageId":"253","endLine":51,"endColumn":61},{"ruleId":"250","severity":1,"message":"254","line":29,"column":13,"nodeType":"252","messageId":"253","endLine":29,"endColumn":15},{"ruleId":"250","severity":1,"message":"251","line":53,"column":20,"nodeType":"252","messageId":"253","endLine":53,"endColumn":22},{"ruleId":"250","severity":1,"message":"254","line":53,"column":55,"nodeType":"252","messageId":"253","endLine":53,"endColumn":57},{"ruleId":"250","severity":1,"message":"251","line":57,"column":20,"nodeType":"252","messageId":"253","endLine":57,"endColumn":22},{"ruleId":"250","severity":1,"message":"254","line":57,"column":55,"nodeType":"252","messageId":"253","endLine":57,"endColumn":57},{"ruleId":"250","severity":1,"message":"254","line":62,"column":26,"nodeType":"252","messageId":"253","endLine":62,"endColumn":28},{"ruleId":"238","severity":1,"message":"242","line":1,"column":17,"nodeType":"240","messageId":"241","endLine":1,"endColumn":26},{"ruleId":"238","severity":1,"message":"255","line":4,"column":10,"nodeType":"240","messageId":"241","endLine":4,"endColumn":14},{"ruleId":"238","severity":1,"message":"256","line":4,"column":16,"nodeType":"240","messageId":"241","endLine":4,"endColumn":26},{"ruleId":"238","severity":1,"message":"257","line":5,"column":8,"nodeType":"240","messageId":"241","endLine":5,"endColumn":27},{"ruleId":"238","severity":1,"message":"258","line":9,"column":10,"nodeType":"240","messageId":"241","endLine":9,"endColumn":18},{"ruleId":"238","severity":1,"message":"259","line":9,"column":20,"nodeType":"240","messageId":"241","endLine":9,"endColumn":23},{"ruleId":"238","severity":1,"message":"260","line":39,"column":11,"nodeType":"240","messageId":"241","endLine":39,"endColumn":28},{"ruleId":"238","severity":1,"message":"261","line":40,"column":5,"nodeType":"240","messageId":"241","endLine":40,"endColumn":27},{"ruleId":"238","severity":1,"message":"262","line":41,"column":5,"nodeType":"240","messageId":"241","endLine":41,"endColumn":16},{"ruleId":"238","severity":1,"message":"263","line":45,"column":5,"nodeType":"240","messageId":"241","endLine":45,"endColumn":16},{"ruleId":"238","severity":1,"message":"264","line":48,"column":5,"nodeType":"240","messageId":"241","endLine":48,"endColumn":12},{"ruleId":"238","severity":1,"message":"265","line":5,"column":8,"nodeType":"240","messageId":"241","endLine":5,"endColumn":9},{"ruleId":"238","severity":1,"message":"266","line":14,"column":8,"nodeType":"240","messageId":"241","endLine":14,"endColumn":10},{"ruleId":"238","severity":1,"message":"256","line":17,"column":16,"nodeType":"240","messageId":"241","endLine":17,"endColumn":26},{"ruleId":"238","severity":1,"message":"267","line":46,"column":7,"nodeType":"240","messageId":"241","endLine":46,"endColumn":17},{"ruleId":"238","severity":1,"message":"268","line":49,"column":9,"nodeType":"240","messageId":"241","endLine":49,"endColumn":17},{"ruleId":"238","severity":1,"message":"261","line":61,"column":64,"nodeType":"240","messageId":"241","endLine":61,"endColumn":86},{"ruleId":"238","severity":1,"message":"269","line":61,"column":105,"nodeType":"240","messageId":"241","endLine":61,"endColumn":116},{"ruleId":"238","severity":1,"message":"270","line":66,"column":10,"nodeType":"240","messageId":"241","endLine":66,"endColumn":19},{"ruleId":"238","severity":1,"message":"271","line":66,"column":21,"nodeType":"240","messageId":"241","endLine":66,"endColumn":32},{"ruleId":"238","severity":1,"message":"272","line":67,"column":10,"nodeType":"240","messageId":"241","endLine":67,"endColumn":25},{"ruleId":"238","severity":1,"message":"273","line":67,"column":27,"nodeType":"240","messageId":"241","endLine":67,"endColumn":45},{"ruleId":"238","severity":1,"message":"274","line":69,"column":10,"nodeType":"240","messageId":"241","endLine":69,"endColumn":14},{"ruleId":"238","severity":1,"message":"275","line":69,"column":16,"nodeType":"240","messageId":"241","endLine":69,"endColumn":23},{"ruleId":"238","severity":1,"message":"276","line":70,"column":10,"nodeType":"240","messageId":"241","endLine":70,"endColumn":14},{"ruleId":"238","severity":1,"message":"277","line":70,"column":16,"nodeType":"240","messageId":"241","endLine":70,"endColumn":23},{"ruleId":"238","severity":1,"message":"278","line":71,"column":10,"nodeType":"240","messageId":"241","endLine":71,"endColumn":15},{"ruleId":"238","severity":1,"message":"279","line":71,"column":17,"nodeType":"240","messageId":"241","endLine":71,"endColumn":25},{"ruleId":"238","severity":1,"message":"280","line":72,"column":10,"nodeType":"240","messageId":"241","endLine":72,"endColumn":17},{"ruleId":"238","severity":1,"message":"281","line":72,"column":19,"nodeType":"240","messageId":"241","endLine":72,"endColumn":29},{"ruleId":"238","severity":1,"message":"282","line":147,"column":13,"nodeType":"240","messageId":"241","endLine":147,"endColumn":29},{"ruleId":"238","severity":1,"message":"283","line":1,"column":17,"nodeType":"240","messageId":"241","endLine":1,"endColumn":25},{"ruleId":"238","severity":1,"message":"242","line":1,"column":27,"nodeType":"240","messageId":"241","endLine":1,"endColumn":36},{"ruleId":"238","severity":1,"message":"239","line":11,"column":8,"nodeType":"240","messageId":"241","endLine":11,"endColumn":19},{"ruleId":"238","severity":1,"message":"259","line":12,"column":10,"nodeType":"240","messageId":"241","endLine":12,"endColumn":13},{"ruleId":"238","severity":1,"message":"284","line":34,"column":11,"nodeType":"240","messageId":"241","endLine":34,"endColumn":24},{"ruleId":"238","severity":1,"message":"285","line":37,"column":11,"nodeType":"240","messageId":"241","endLine":37,"endColumn":27},{"ruleId":"238","severity":1,"message":"286","line":39,"column":17,"nodeType":"240","messageId":"241","endLine":39,"endColumn":33},{"ruleId":"246","severity":1,"message":"247","line":68,"column":70,"nodeType":"248","messageId":"249","endLine":68,"endColumn":71},{"ruleId":"238","severity":1,"message":"283","line":1,"column":17,"nodeType":"240","messageId":"241","endLine":1,"endColumn":25},{"ruleId":"238","severity":1,"message":"242","line":1,"column":27,"nodeType":"240","messageId":"241","endLine":1,"endColumn":36},{"ruleId":"250","severity":1,"message":"251","line":57,"column":25,"nodeType":"252","messageId":"253","endLine":57,"endColumn":27},{"ruleId":"250","severity":1,"message":"251","line":57,"column":44,"nodeType":"252","messageId":"253","endLine":57,"endColumn":46},{"ruleId":"238","severity":1,"message":"242","line":1,"column":27,"nodeType":"240","messageId":"241","endLine":1,"endColumn":36},{"ruleId":"238","severity":1,"message":"287","line":2,"column":8,"nodeType":"240","messageId":"241","endLine":2,"endColumn":19},{"ruleId":"238","severity":1,"message":"288","line":52,"column":67,"nodeType":"240","messageId":"241","endLine":52,"endColumn":87},{"ruleId":"238","severity":1,"message":"243","line":52,"column":89,"nodeType":"240","messageId":"241","endLine":52,"endColumn":96},{"ruleId":"238","severity":1,"message":"289","line":52,"column":98,"nodeType":"240","messageId":"241","endLine":52,"endColumn":116},{"ruleId":"250","severity":1,"message":"254","line":117,"column":49,"nodeType":"252","messageId":"253","endLine":117,"endColumn":51},{"ruleId":"290","severity":1,"message":"291","line":139,"column":21,"nodeType":"292","endLine":139,"endColumn":109},{"ruleId":"246","severity":1,"message":"247","line":157,"column":52,"nodeType":"248","messageId":"249","endLine":157,"endColumn":53},{"ruleId":"238","severity":1,"message":"293","line":1,"column":38,"nodeType":"240","messageId":"241","endLine":1,"endColumn":44},{"ruleId":"238","severity":1,"message":"294","line":1,"column":46,"nodeType":"240","messageId":"241","endLine":1,"endColumn":55},{"ruleId":"238","severity":1,"message":"265","line":3,"column":8,"nodeType":"240","messageId":"241","endLine":3,"endColumn":9},{"ruleId":"238","severity":1,"message":"295","line":5,"column":8,"nodeType":"240","messageId":"241","endLine":5,"endColumn":18},{"ruleId":"238","severity":1,"message":"296","line":7,"column":8,"nodeType":"240","messageId":"241","endLine":7,"endColumn":22},{"ruleId":"238","severity":1,"message":"297","line":10,"column":10,"nodeType":"240","messageId":"241","endLine":10,"endColumn":16},{"ruleId":"238","severity":1,"message":"298","line":34,"column":49,"nodeType":"240","messageId":"241","endLine":34,"endColumn":68},{"ruleId":"299","severity":1,"message":"300","line":51,"column":8,"nodeType":"301","endLine":51,"endColumn":23,"suggestions":"302"},{"ruleId":"299","severity":1,"message":"303","line":124,"column":8,"nodeType":"301","endLine":124,"endColumn":10,"suggestions":"304"},{"ruleId":"238","severity":1,"message":"305","line":140,"column":14,"nodeType":"240","messageId":"241","endLine":140,"endColumn":21},{"ruleId":"238","severity":1,"message":"242","line":2,"column":17,"nodeType":"240","messageId":"241","endLine":2,"endColumn":26},{"ruleId":"238","severity":1,"message":"283","line":2,"column":28,"nodeType":"240","messageId":"241","endLine":2,"endColumn":36},{"ruleId":"238","severity":1,"message":"260","line":28,"column":35,"nodeType":"240","messageId":"241","endLine":28,"endColumn":52},{"ruleId":"238","severity":1,"message":"261","line":28,"column":64,"nodeType":"240","messageId":"241","endLine":28,"endColumn":86},{"ruleId":"238","severity":1,"message":"306","line":31,"column":5,"nodeType":"240","messageId":"241","endLine":31,"endColumn":11},{"ruleId":"238","severity":1,"message":"307","line":32,"column":5,"nodeType":"240","messageId":"241","endLine":32,"endColumn":19},{"ruleId":"238","severity":1,"message":"308","line":33,"column":5,"nodeType":"240","messageId":"241","endLine":33,"endColumn":17},{"ruleId":"238","severity":1,"message":"274","line":35,"column":5,"nodeType":"240","messageId":"241","endLine":35,"endColumn":9},{"ruleId":"250","severity":1,"message":"254","line":46,"column":16,"nodeType":"252","messageId":"253","endLine":46,"endColumn":18},{"ruleId":"309","severity":1,"message":"310","line":63,"column":9,"nodeType":"292","endLine":63,"endColumn":83},{"ruleId":"290","severity":1,"message":"291","line":29,"column":13,"nodeType":"292","endLine":29,"endColumn":64},{"ruleId":"250","severity":1,"message":"251","line":15,"column":37,"nodeType":"252","messageId":"253","endLine":15,"endColumn":39},{"ruleId":"250","severity":1,"message":"251","line":17,"column":42,"nodeType":"252","messageId":"253","endLine":17,"endColumn":44},{"ruleId":"250","severity":1,"message":"251","line":21,"column":42,"nodeType":"252","messageId":"253","endLine":21,"endColumn":44},{"ruleId":"250","severity":1,"message":"251","line":23,"column":42,"nodeType":"252","messageId":"253","endLine":23,"endColumn":44},{"ruleId":"250","severity":1,"message":"251","line":27,"column":42,"nodeType":"252","messageId":"253","endLine":27,"endColumn":44},{"ruleId":"250","severity":1,"message":"254","line":46,"column":28,"nodeType":"252","messageId":"253","endLine":46,"endColumn":30},{"ruleId":"250","severity":1,"message":"254","line":52,"column":28,"nodeType":"252","messageId":"253","endLine":52,"endColumn":30},{"ruleId":"250","severity":1,"message":"254","line":58,"column":28,"nodeType":"252","messageId":"253","endLine":58,"endColumn":30},{"ruleId":"250","severity":1,"message":"254","line":18,"column":28,"nodeType":"252","messageId":"253","endLine":18,"endColumn":30},"no-native-reassign",["311"],"no-negated-in-lhs",["312"],"no-unused-vars","'ContactList' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'members' is assigned a value but never used.","'con' is assigned a value but never used.","'setCon' is assigned a value but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'Icon' is defined but never used.","'InlineIcon' is defined but never used.","'accountMultiplePlus' is defined but never used.","'blueGrey' is defined but never used.","'red' is defined but never used.","'stateConversation' is assigned a value but never used.","'setCurrentConversation' is assigned a value but never used.","'AddContacts' is assigned a value but never used.","'showMembers' is assigned a value but never used.","'manager' is assigned a value but never used.","'$' is defined but never used.","'io' is defined but never used.","'MY_USER_ID' is assigned a value but never used.","'ENDPOINT' is assigned a value but never used.","'showContact' is assigned a value but never used.","'messages2' is assigned a value but never used.","'setMessages' is assigned a value but never used.","'showMyComponent' is assigned a value but never used.","'setShowMyComponent' is assigned a value but never used.","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","'room' is assigned a value but never used.","'setRoom' is assigned a value but never used.","'users' is assigned a value but never used.","'setUsers' is assigned a value but never used.","'message' is assigned a value but never used.","'setMessage' is assigned a value but never used.","'prevBySameAuthor' is assigned a value but never used.","'useState' is defined but never used.","'conversations' is assigned a value but never used.","'getConversations' is assigned a value but never used.","'newConversations' is assigned a value but never used.","'UploadImage' is defined but never used.","'AddContactsToHangout' is assigned a value but never used.","'setShowContactList' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useRef' is defined but never used.","'Component' is defined but never used.","'InputEmoji' is defined but never used.","'socketIOClient' is defined but never used.","'render' is defined but never used.","'getCurrentHangoutID' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.userName'. Either include it or remove the dependency array.","ArrayExpression",["313"],"React Hook useEffect has a missing dependency: 'addWaveLocal'. Either include it or remove the dependency array.",["314"],"'onEnter' is defined but never used.","'isMine' is assigned a value but never used.","'startsSequence' is assigned a value but never used.","'endsSequence' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"315","fix":"316"},{"desc":"317","fix":"318"},"Update the dependencies array to be: [props.hangout, props.userName]",{"range":"319","text":"320"},"Update the dependencies array to be: [addWaveLocal]",{"range":"321","text":"322"},[1727,1742],"[props.hangout, props.userName]",[4115,4117],"[addWaveLocal]"]